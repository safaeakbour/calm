{"status": {"state": "ACTIVE", "message_list": [], "description": "", "resources": {"service_definition_list": [{"singleton": false, "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "83714021-c3bb-4098-814d-f446cdb2ecb5", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Configure", "uuid": "483a8d8b-7202-437e-9b05-41f11fe15073"}], "name": "7de8078e_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "30d86733-5781-43d8-b349-0d6e98b76386"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Configure", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}/\nsudo chmod +r ${ETCD_CERT_PATH}/*\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - apiserver\n    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,AlwaysPullImages\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=true\n    - --insecure-port=0\n    - --secure-port=443\n    - --profiling=false\n    - --repair-malformed-updates=false\n    - --apiserver-count=3\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=/var/lib/audit.log\n    - --authorization-mode=RBAC\n    - --bind-address=0.0.0.0\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --enable-swagger-ui=true\n    - --runtime-config=rbac.authorization.k8s.io/v1alpha1\n    - --etcd-cafile=${ETCD_CERT_PATH}/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}/encryption-config.yaml\n    - --tls-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-https=true\n    - --service-account-key-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --v=2\n    ports:\n    - containerPort: 443\n      hostPort: 443\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=kubernetes-prod-cluster  \n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem  \n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true  \n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-controller-manager.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - scheduler\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-scheduler.kubeconfig\n    - --leader-elect=true\n    - --profiling=false\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-scheduler.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "483a8d8b-7202-437e-9b05-41f11fe15073"}], "description": "", "name": "39d74fe7_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "7de8078e_dag", "uuid": "30d86733-5781-43d8-b349-0d6e98b76386"}, "message_list": [], "variable_list": [], "uuid": "40fb0a0b-51cc-4b83-ab68-5a518d6cfe8d"}, "message_list": [], "name": "action_create"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "ee0cb3f5-d4cc-4f51-b0ed-25ccbd217368", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "04a99dae_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "4a540f36-37f0-43d0-b52e-ab750f86bb75"}], "description": "", "name": "b00241d6_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "04a99dae_dag", "uuid": "4a540f36-37f0-43d0-b52e-ab750f86bb75"}, "message_list": [], "variable_list": [], "uuid": "3dd9027c-7515-4ae5-929c-9a2ad6dd7a59"}, "message_list": [], "name": "action_delete"}, {"description": "System action for starting an application", "type": "system", "uuid": "94982008-7875-4d62-ba17-1514494bba0c", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Start", "uuid": "4549ef74-1091-4544-87d4-788345d4fd36"}, {"kind": "app_task", "name": "StartFlanneld", "uuid": "0b02147f-d93d-490b-ace4-0cd13b93fb53"}, {"kind": "app_task", "name": "KubeDns", "uuid": "81e2fccf-aebb-4956-a0e2-7c5b47c77224"}, {"kind": "app_task", "name": "VolumePlugin", "uuid": "4e72ae3f-d2f5-45f0-b2d0-4545e6a98c8b"}, {"kind": "app_task", "name": "Dashboard", "uuid": "110a5ce4-aee3-47d2-b290-82823d59c628"}, {"kind": "app_task", "name": "Helm", "uuid": "1c1e6eea-7157-4c87-b7b8-3456d02f7f84"}, {"kind": "app_task", "name": "Calico", "uuid": "3b30fe86-70ec-4dfb-aa97-bfb445eb3314"}], "name": "40001146_dag", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "VolumePlugin", "uuid": "4e72ae3f-d2f5-45f0-b2d0-4545e6a98c8b"}, "edge_type": "user_defined", "type": "", "uuid": "d43f9125-9b07-436b-9bf0-31a6854525a1", "to_task_reference": {"kind": "app_task", "name": "Dashboard", "uuid": "110a5ce4-aee3-47d2-b290-82823d59c628"}}, {"from_task_reference": {"kind": "app_task", "name": "Dashboard", "uuid": "110a5ce4-aee3-47d2-b290-82823d59c628"}, "edge_type": "user_defined", "type": "", "uuid": "d43f9125-9b07-436b-9bf0-31a6854525a1", "to_task_reference": {"kind": "app_task", "name": "Helm", "uuid": "1c1e6eea-7157-4c87-b7b8-3456d02f7f84"}}, {"from_task_reference": {"kind": "app_task", "name": "Helm", "uuid": "1c1e6eea-7157-4c87-b7b8-3456d02f7f84"}, "edge_type": "user_defined", "type": "", "uuid": "d43f9125-9b07-436b-9bf0-31a6854525a1", "to_task_reference": {"kind": "app_task", "name": "Calico", "uuid": "3b30fe86-70ec-4dfb-aa97-bfb445eb3314"}}, {"from_task_reference": {"kind": "app_task", "name": "Start", "uuid": "4549ef74-1091-4544-87d4-788345d4fd36"}, "edge_type": "user_defined", "type": "", "uuid": "d43f9125-9b07-436b-9bf0-31a6854525a1", "to_task_reference": {"kind": "app_task", "name": "StartFlanneld", "uuid": "0b02147f-d93d-490b-ace4-0cd13b93fb53"}}, {"from_task_reference": {"kind": "app_task", "name": "StartFlanneld", "uuid": "0b02147f-d93d-490b-ace4-0cd13b93fb53"}, "edge_type": "user_defined", "type": "", "uuid": "d43f9125-9b07-436b-9bf0-31a6854525a1", "to_task_reference": {"kind": "app_task", "name": "KubeDns", "uuid": "81e2fccf-aebb-4956-a0e2-7c5b47c77224"}}, {"from_task_reference": {"kind": "app_task", "name": "KubeDns", "uuid": "81e2fccf-aebb-4956-a0e2-7c5b47c77224"}, "edge_type": "user_defined", "type": "", "uuid": "d43f9125-9b07-436b-9bf0-31a6854525a1", "to_task_reference": {"kind": "app_task", "name": "VolumePlugin", "uuid": "4e72ae3f-d2f5-45f0-b2d0-4545e6a98c8b"}}], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "5e575120-0163-45a7-bc55-edc07c477d4d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Start", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\nsudo systemctl start kube-etcd docker kubelet iscsid\nsudo systemctl enable kube-etcd docker kubelet iscsid\nexport PATH=$PATH:/opt/bin\n\nmkdir CA\nmv ca*.pem etcd-*.pem kubernetes*.pem controller* kube-*.kubeconfig encryption-config.yaml CA/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\ncp /opt/kube-ssl/admin*.pem CA/\nwhile [[ $(curl --key CA/admin-key.pem --cert CA/admin.pem --cacert CA/ca.pem https://@@{address}@@/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n\tsleep 5\ndone\n\nkubectl config set-cluster kubernetes-the-hard-way  --certificate-authority=$HOME/CA/ca.pem  --embed-certs=true --server=https://@@{address}@@\nkubectl config set-credentials admin  --client-certificate=$HOME/CA/admin.pem  --client-key=$HOME/CA/admin-key.pem\nkubectl config set-context kubernetes-the-hard-way  --cluster=kubernetes-the-hard-way  --user=admin\nkubectl config use-context kubernetes-the-hard-way", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "4549ef74-1091-4544-87d4-788345d4fd36"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "StartFlanneld", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nsleep 10\nexport PATH=$PATH:/opt/bin\necho '---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: flannel\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"10.200.0.0/16\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: extensions/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      initContainers:\n      - name: install-cni\n        image: quay.io/coreos/flannel:v0.9.0-amd64\n        command:\n        - cp\n        args:\n        - -f\n        - /etc/kube-flannel/cni-conf.json\n        - /etc/cni/net.d/10-flannel.conf\n        volumeMounts:\n        - name: cni\n          mountPath: /etc/cni/net.d\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      containers:\n      - name: kube-flannel\n        image: quay.io/coreos/flannel:v0.9.0-amd64\n        command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: /run\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      volumes:\n        - name: run\n          hostPath:\n            path: /run\n        - name: cni\n          hostPath:\n            path: /etc/cni/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | tee kube-flannel.yml\nkubectl create -f kube-flannel.yml\nsleep 30", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "0b02147f-d93d-490b-ace4-0cd13b93fb53"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "KubeDns", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nmkdir kubedns\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  upstreamNameservers: |\n    [\"8.8.8.8\", \"4.2.2.2\"]\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_CLUSTER_DNS}@@\n  ports:\n    - name: dns\n      port: 53\n      protocol: UDP\n    - name: dns-tcp\n      port: 53\n      protocol: TCP\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod:\n    spec:\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.4\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=cluster.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.4\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --log-facility=-\n        - --server=/cluster.local./127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.4\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local.,5,A\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local.,5,A\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy:\n      serviceAccountName: kube-dns' | tee kubedns/kube-dns.yaml\n      \nkubectl create -f kubedns/kube-dns.yaml", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "81e2fccf-aebb-4956-a0e2-7c5b47c77224"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "VolumePlugin", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nmkdir volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PRISM_USERNAME}@@:@@{PRISM_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: silver\n  annotations:\n    storageclass.kubernetes.io/is-default-class: \"true\"\n  namespace: kube-system\nprovisioner: nutanix/abs\nparameters:\n     prismEndPoint: @@{PRISM_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PRISM_DATA_SERVICE_IP}@@:3260\n     user: @@{PRISM_USERNAME}@@\n     password: @@{PRISM_PASSWORD}@@\n     secretName: ntnx-secret\n     storageContainer: @@{CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | tee volume_plugin/nutanix-provisioner.yaml\n\nsed -i \"s/<SECRET>/${NTNX_SECRET}/\" volume_plugin/nutanix-provisioner.yaml\nkubectl create -f volume_plugin/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix/abs\" | tee -a volume_plugin/ntnx-secret.yaml\nsed -i \"s/<SECRET>/${NTNX_SECRET}/\" volume_plugin/ntnx-secret.yaml\nkubectl create -f volume_plugin/ntnx-secret.yaml", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "4e72ae3f-d2f5-45f0-b2d0-4545e6a98c8b"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Dashboard", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nmkdir Dashboard\necho '# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Configuration to deploy release version of the Dashboard UI compatible with\n# Kubernetes 1.7.\n#\n# Example usage: kubectl create -f <this_file>\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: kubernetes-full-access\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: extensions/v1beta1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      initContainers:\n      - name: kubernetes-dashboard-init\n        image: gcr.io/google_containers/kubernetes-dashboard-init-amd64:v1.0.1\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: /certs\n      containers:\n      - name: kubernetes-dashboard\n        image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.7.1\n        ports:\n        - containerPort: 9090\n          protocol: TCP\n        args:\n          - --tls-key-file=/certs/dashboard.key\n          - --tls-cert-file=/certs/dashboard.crt\n          # Uncomment the following line to manually specify Kubernetes API server Host\n          # If not specified, Dashboard will attempt to auto discover the API server and connect\n          # to it. Uncomment only if the default does not work.\n          # - --apiserver-host=http://my-address:port\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: /certs\n          readOnly: true\n        livenessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: /\n            port: 8443\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      volumes:\n      - name: kubernetes-dashboard-certs\n        secret:\n          secretName: kubernetes-dashboard-certs\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  type: NodePort\n  ports:\n    - port: 8443\n      nodePort: 30443\n  selector:\n    k8s-app: kubernetes-dashboard' | tee Dashboard/kubernetes-dashboard.yaml\nkubectl create -f Dashboard/kubernetes-dashboard.yaml", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "110a5ce4-aee3-47d2-b290-82823d59c628"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Helm", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\necho \"#helm init --service-account helm\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: helm\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: helm\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: helm\n  namespace: kube-system\" | tee helm.yaml\n  \nkubectl create -f helm.yaml\nhelm init --service-account helm", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "1c1e6eea-7157-4c87-b7b8-3456d02f7f84"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Calico", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nETCD_SERVER_PORT=2379\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\nkubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/rbac.yaml\n\n#ETCD_KEY=$(python -c 'import base64; import sys; print base64.b64encode(sys.argv[1])' \"$(cat /etc/kubernetes/ssl/kubernetes-key.pem)\")\n#ETCD_CERT=$(python -c 'import base64; import sys; print base64.b64encode(sys.argv[1])' \"$(cat /etc/kubernetes/ssl/kubernetes.pem)\")\n#ETCD_CA=$(python -c 'import base64; import sys; print base64.b64encode(sys.argv[1])' \"$(cat /etc/kubernetes/ssl/ca.pem)\")\n\necho '# Calico Version v2.6.2\n\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  etcd_endpoints: \"<ETCD_SERVERS>\"\n  calico_backend: \"none\"\n  cni_network_config: |-\n    {\n        \"name\": \"k8s-pod-network\",\n        \"cniVersion\": \"0.1.0\",\n        \"type\": \"flannel\",\n         \"delegate\": {\n            \"type\": \"calico\",\n            \"etcd_endpoints\": \"__ETCD_ENDPOINTS__\",\n            \"etcd_key_file\": \"__ETCD_KEY_FILE__\",\n            \"etcd_cert_file\": \"__ETCD_CERT_FILE__\",\n            \"etcd_ca_cert_file\": \"__ETCD_CA_CERT_FILE__\",\n            \"log_level\": \"info\",\n            \"mtu\": 1500,\n            \"policy\": {\n               \"type\": \"k8s\",\n               \"k8s_api_root\": \"https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__\",\n               \"k8s_auth_token\": \"__SERVICEACCOUNT_TOKEN__\"\n           },\n           \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n           }\n        }\n    }\n  etcd_ca: \"/calico-secrets/etcd-ca\"\n  etcd_cert: \"/calico-secrets/etcd-cert\"\n  etcd_key: \"/calico-secrets/etcd-key\"\n\n---\n\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: calico-etcd-secrets\n  namespace: kube-system\ndata:\n  etcd-key: \"<ETCD_KEY>\"\n  etcd-cert: \"<ETCD_CERT>\"\n  etcd-ca: \"<ETCD_CA>\"\n---\n\nkind: DaemonSet\napiVersion: extensions/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n        scheduler.alpha.kubernetes.io/tolerations: |\n          [{\"key\": \"dedicated\", \"value\": \"master\", \"effect\": \"NoSchedule\" },\n           {\"key\":\"CriticalAddonsOnly\", \"operator\":\"Exists\"}]\n    spec:\n      hostNetwork: true\n      serviceAccountName: calico-node\n\n      terminationGracePeriodSeconds: 0\n      containers:\n\n        - name: calico-node\n          image: quay.io/calico/node:v2.6.2\n          env:\n            - name: ETCD_ENDPOINTS\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_endpoints\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: ETCD_CA_CERT_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_ca\n            - name: ETCD_KEY_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_key\n            - name: ETCD_CERT_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_cert\n            - name: IP\n              value: \"\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: /liveness\n              port: 9099\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: /readiness\n              port: 9099\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: /lib/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: /var/run/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: /calico-secrets\n              name: etcd-certs\n        - name: install-cni\n          image: quay.io/calico/cni:v1.11.0\n          command: [\"/install-cni.sh\"]\n          env:\n            - name: ETCD_ENDPOINTS\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_endpoints\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n          volumeMounts:\n            - mountPath: /host/opt/cni/bin\n              name: cni-bin-dir\n            - mountPath: /host/etc/cni/net.d\n              name: cni-net-dir\n            - mountPath: /calico-secrets\n              name: etcd-certs\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: /lib/modules\n        - name: var-run-calico\n          hostPath:\n            path: /var/run/calico\n        - name: cni-bin-dir\n          hostPath:\n            path: /opt/cni/bin\n        - name: cni-net-dir\n          hostPath:\n            path: /etc/cni/net.d\n        - name: etcd-certs\n          secret:\n            secretName: calico-etcd-secrets\n\n---\n\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: calico-kube-controllers\n  namespace: kube-system\n  labels:\n    k8s-app: calico-kube-controllers\n  annotations:\n    scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    scheduler.alpha.kubernetes.io/tolerations: |\n      [{\"key\": \"dedicated\", \"value\": \"master\", \"effect\": \"NoSchedule\" },\n       {\"key\":\"CriticalAddonsOnly\", \"operator\":\"Exists\"}]\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      name: calico-kube-controllers\n      namespace: kube-system\n      labels:\n        k8s-app: calico-kube-controllers\n    spec:\n      hostNetwork: true\n      serviceAccountName: calico-kube-controllers\n      containers:\n        - name: calico-kube-controllers\n          image: quay.io/calico/kube-controllers:v1.0.0\n          env:\n            - name: ETCD_ENDPOINTS\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_endpoints\n            - name: ETCD_CA_CERT_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_ca\n            - name: ETCD_KEY_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_key\n            - name: ETCD_CERT_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_cert\n          volumeMounts:\n            - mountPath: /calico-secrets\n              name: etcd-certs\n      volumes:\n        - name: etcd-certs\n          secret:\n            secretName: calico-etcd-secrets\n\n---\n\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: calico-policy-controller\n  namespace: kube-system\n  labels:\n    k8s-app: calico-policy\nspec:\n  replicas: 0\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      name: calico-policy-controller\n      namespace: kube-system\n      labels:\n        k8s-app: calico-policy\n    spec:\n      hostNetwork: true\n      serviceAccountName: calico-kube-controllers\n      containers:\n        - name: calico-policy-controller\n          image: quay.io/calico/kube-controllers:v1.0.0\n          env:\n            - name: ETCD_ENDPOINTS\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_endpoints\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-kube-controllers\n  namespace: kube-system\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system' | tee calico.yaml\n  \nsed -i \"s#<ETCD_SERVERS>#${ETCD_SERVERS}#\" calico.yaml\nsed -i \"s/<ETCD_KEY>/${ETCD_KEY}/\" calico.yaml\nsed -i \"s/<ETCD_CERT>/${ETCD_CERT}/\" calico.yaml\nsed -i \"s/<ETCD_CA>/${ETCD_CA}/\" calico.yaml\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "3b30fe86-70ec-4dfb-aa97-bfb445eb3314"}], "description": "", "name": "05c2f01a_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "40001146_dag", "uuid": "5e575120-0163-45a7-bc55-edc07c477d4d"}, "message_list": [], "variable_list": [], "uuid": "9e006603-1d50-4066-a7a7-5730b21afebc"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "1914988c-a150-4e4f-acfe-3a90cb121226", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "68e6d6cf_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "adbedd04-84ae-45dc-b757-61ff3509d436"}], "description": "", "name": "49e3a785_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "68e6d6cf_dag", "uuid": "adbedd04-84ae-45dc-b757-61ff3509d436"}, "message_list": [], "variable_list": [], "uuid": "f80dcd36-ad50-47e2-ad7e-0a02d75c0cb6"}, "message_list": [], "name": "action_stop"}, {"description": "System action for restarting an application", "type": "system", "uuid": "a320cc68-ff84-4162-81d1-49ac151ebc37", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "928d779e_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "3abbf914-3e4d-433c-9fbc-bfb22dff328c"}], "description": "", "name": "9bfe1a06_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "928d779e_dag", "uuid": "3abbf914-3e4d-433c-9fbc-bfb22dff328c"}, "message_list": [], "variable_list": [], "uuid": "e3b0507a-1b6a-49b6-bee3-530fa744a39e"}, "message_list": [], "name": "action_restart"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "c0f80d1a-c785-49df-9bd1-f01898b29692", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Service_Element_Delete_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "0159789a-02b9-408a-890c-9c6d436ea5a5"}], "name": "SYS_GEN__DAG_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "6d87c7c6-ed65-49a7-b284-339279eea7c9"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Service_Element_Delete_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "0159789a-02b9-408a-890c-9c6d436ea5a5"}], "description": "", "name": "SYS_GEN__Runbook_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "6d87c7c6-ed65-49a7-b284-339279eea7c9"}, "message_list": [], "variable_list": [], "uuid": "0efd0a0c-e330-406a-a24a-049ab7dead38"}, "message_list": [], "name": "action_soft_delete"}], "depends_on_list": [], "name": "Kubernetes_Master", "state": "ACTIVE", "port_list": [], "editables": {}, "tier": "", "message_list": [], "variable_list": [], "description": ""}, {"singleton": false, "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "98ba3165-7d42-47a1-8613-e4169fd4e612", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "9dfbf446_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "0c429e1d-b7ce-4e27-9fd0-a5f3484a31d8"}], "description": "", "name": "925ba7c0_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "9dfbf446_dag", "uuid": "0c429e1d-b7ce-4e27-9fd0-a5f3484a31d8"}, "message_list": [], "variable_list": [], "uuid": "6fc3922e-1f78-49be-bb87-69f62b307a51"}, "message_list": [], "name": "action_create"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "d5a7908b-7e74-4708-b951-400e95cda4ba", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "141edbbe_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "aeb0156d-dab3-4dbd-849a-3245140047a4"}], "description": "", "name": "28e74b96_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "141edbbe_dag", "uuid": "aeb0156d-dab3-4dbd-849a-3245140047a4"}, "message_list": [], "variable_list": [], "uuid": "5b4efcf8-a145-4233-ab6b-8205959cd6ee"}, "message_list": [], "name": "action_delete"}, {"description": "System action for starting an application", "type": "system", "uuid": "2965d9a1-d438-4afd-aab0-21543f9f3699", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Start", "uuid": "d68fa9b4-533a-4534-b588-772fa4d43efd"}], "name": "c4ac1e52_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "bf126ba9-10f0-41e4-b0dd-2e223845af3e"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Start", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nsudo systemctl start kubelet iscsid\nsudo systemctl enable kubelet iscsid", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "d68fa9b4-533a-4534-b588-772fa4d43efd"}], "description": "", "name": "af446214_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "c4ac1e52_dag", "uuid": "bf126ba9-10f0-41e4-b0dd-2e223845af3e"}, "message_list": [], "variable_list": [], "uuid": "3271540b-0d85-412b-8bbc-3b76b78d7e05"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "7e348061-844e-4cd9-b501-ccd4604f7371", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "35667c90_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "53a9be0c-e5f8-4305-a852-00a3eb28da14"}], "description": "", "name": "bbfee442_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "35667c90_dag", "uuid": "53a9be0c-e5f8-4305-a852-00a3eb28da14"}, "message_list": [], "variable_list": [], "uuid": "d55140a3-9de7-415c-963d-3794e26814ea"}, "message_list": [], "name": "action_stop"}, {"description": "System action for restarting an application", "type": "system", "uuid": "3a5c4a46-eefd-4254-88f0-8586ff2c6a97", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "78a2de6b_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "e6750f32-31da-4685-a64f-c9a3cd4d9784"}], "description": "", "name": "4db0601a_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "78a2de6b_dag", "uuid": "e6750f32-31da-4685-a64f-c9a3cd4d9784"}, "message_list": [], "variable_list": [], "uuid": "52446381-2d3f-4a1e-bbd5-bf5cae668b3e"}, "message_list": [], "name": "action_restart"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "65cdfb35-1d7c-476a-afb4-1e6bc6b732ea", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Service_Element_Delete_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "90e5d223-7c08-4ad9-a45a-8ba0e4e391c5"}], "name": "SYS_GEN__DAG_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "872a4b95-65ef-481c-9741-efe3e71deaa5"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Service_Element_Delete_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "90e5d223-7c08-4ad9-a45a-8ba0e4e391c5"}], "description": "", "name": "SYS_GEN__Runbook_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "872a4b95-65ef-481c-9741-efe3e71deaa5"}, "message_list": [], "variable_list": [], "uuid": "539a67d3-aec8-4c12-ae0f-605b6052c026"}, "message_list": [], "name": "action_soft_delete"}], "depends_on_list": [], "name": "Kubernetes_Minion", "state": "ACTIVE", "port_list": [], "editables": {}, "tier": "", "message_list": [], "variable_list": [], "description": ""}], "substrate_definition_list": [{"description": "", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "f08f617b-7fca-4abf-9634-984dc4c203d0", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Provision_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "375bb312-94ee-4e16-a8b5-438f68ef2356"}, {"kind": "app_task", "name": "SYS_GEN__check_login_for_K8SC_Centos_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "63722499-ee23-4d43-81c1-1d08aed54683"}], "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Provision_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "375bb312-94ee-4e16-a8b5-438f68ef2356"}, "edge_type": "inherent", "type": "", "uuid": "71e3ab8c-c5ee-4ff3-b6ab-9e63fbde2b19", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__check_login_for_K8SC_Centos_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "63722499-ee23-4d43-81c1-1d08aed54683"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "9df6af9b-5920-4e93-be00-ac0676c8ea43"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Provision_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"name": "Centos-K8SC@@{calm_array_index}@@", "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "13e8838f-dadd-4b0a-a65b-10598432ea88"}, "type": ""}], "power_state": "ON", "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: kube\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "image", "type": "", "name": "CENTOS_7_1801", "uuid": "278a212c-5d87-4679-95c0-92175216a73f"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 1, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 2, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 3, "adapter_type": "SCSI"}, "device_type": "DISK"}}]}}, "timeout_secs": "", "type": "PROVISION_NUTANIX", "variable_list": [], "uuid": "375bb312-94ee-4e16-a8b5-438f68ef2356"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__check_login_for_K8SC_Centos_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "60", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "63722499-ee23-4d43-81c1-1d08aed54683"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "9df6af9b-5920-4e93-be00-ac0676c8ea43"}, "message_list": [], "variable_list": [], "uuid": "1b5006dd-124e-48c0-a68d-af0e325ce100"}, "message_list": [], "name": "action_create"}, {"description": "System action for powering on an application", "type": "system", "uuid": "f73fdcb9-db74-4c91-b6ad-269ea6f9140a", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOn_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "c827551a-7600-48cc-b235-ea07843f1ad8"}, {"kind": "app_task", "name": "check_login_for_K8SC_Centos_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "0b9a2f36-438a-46a8-ab43-3f10405c100b"}], "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOn_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "c827551a-7600-48cc-b235-ea07843f1ad8"}, "edge_type": "inherent", "type": "", "uuid": "99d80f0f-cf70-4bb6-8bd1-0f290462e53c", "to_task_reference": {"kind": "app_task", "name": "check_login_for_K8SC_Centos_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "0b9a2f36-438a-46a8-ab43-3f10405c100b"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "dd818b55-ed34-4029-a025-f970d7f538ce"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_PowerOn_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "c827551a-7600-48cc-b235-ea07843f1ad8"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "check_login_for_K8SC_Centos_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "60", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "0b9a2f36-438a-46a8-ab43-3f10405c100b"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "dd818b55-ed34-4029-a025-f970d7f538ce"}, "message_list": [], "variable_list": [], "uuid": "36914e16-e284-4a21-b351-95ee908dade1"}, "message_list": [], "name": "action_poweron"}, {"description": "System action for suspending an application", "type": "system", "uuid": "2161b4e3-d811-4296-b104-23c81edd7a3b", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "91652154-2eb1-454a-8c07-cab645cc5301"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "91652154-2eb1-454a-8c07-cab645cc5301"}, "message_list": [], "variable_list": [], "uuid": "be3e6ea9-5c25-478c-a173-39b3340c8590"}, "message_list": [], "name": "action_suspend"}, {"description": "System action for modifying an application", "type": "system", "uuid": "83e9e3c8-8074-4522-bea5-d02aad8c686a", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "2ac419ad-1d02-4e9c-b52c-441f2191e530"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "2ac419ad-1d02-4e9c-b52c-441f2191e530"}, "message_list": [], "variable_list": [], "uuid": "7e6d4fd0-4795-44b0-9c9f-2a84e328063c"}, "message_list": [], "name": "action_modify"}, {"description": "System action for powering off an application", "type": "system", "uuid": "75c74255-79ac-4d80-802f-1645c1185da7", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOff_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "423b25b4-edc3-4435-9090-63243553d10f"}], "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "3bdea152-cef7-4f2d-baf0-3c7d5862401d"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_PowerOff_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "423b25b4-edc3-4435-9090-63243553d10f"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "3bdea152-cef7-4f2d-baf0-3c7d5862401d"}, "message_list": [], "variable_list": [], "uuid": "9d7eec6c-0493-4701-94ca-6b59852f348a"}, "message_list": [], "name": "action_poweroff"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "022164e2-2b2c-4059-bb20-0824c9813ac4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Delete_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "8ee741bd-d697-497a-b834-15884abcf5d8"}], "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "fe0e69d6-5520-4217-8bb9-7462b16c9bd9"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Delete_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "DELETE_NUTANIX", "variable_list": [], "uuid": "8ee741bd-d697-497a-b834-15884abcf5d8"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "fe0e69d6-5520-4217-8bb9-7462b16c9bd9"}, "message_list": [], "variable_list": [], "uuid": "321aeab5-a726-48b7-81f7-26329d52a9fc"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "d35a5648-b265-42f9-b4b0-b408ffeba04c", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Substrate_Element_Delete_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "3f543fc7-2621-4661-b3b8-a9a1fe906a61"}], "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "36e5b076-1b87-4452-b7f9-9f49d69db1c7"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Substrate_Element_Delete_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "3f543fc7-2621-4661-b3b8-a9a1fe906a61"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "36e5b076-1b87-4452-b7f9-9f49d69db1c7"}, "message_list": [], "variable_list": [], "uuid": "a747edce-4a4f-4e8c-ace5-c7ae86df0940"}, "message_list": [], "name": "action_soft_delete"}], "type": "AHV_VM", "name": "K8SC_Centos", "state": "ACTIVE", "readiness_probe": {"connection_type": "SSH", "disable_readiness_probe": false, "timeout_secs": "60", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@", "connection_port": 22, "login_credential_local_reference": {"kind": "app_credential", "name": "KUBE", "uuid": "a2ac9727-833b-4f72-9d51-e23023121149"}}, "editables": {"readiness_probe": {"connection_type": true, "connection_port": true, "timeout_secs": true}, "create_spec": {"name": true, "resources": {"nic_list": {"0": {"subnet_reference": true}}, "num_vcpus_per_socket": true, "num_sockets": true, "memory_size_mib": true, "guest_customization": true, "disk_list": {"1": {"disk_size_mib": true}, "0": {"data_source_reference": true, "device_properties": {"disk_address": {"adapter_type": true}, "device_type": true}}, "3": {"disk_size_mib": true}, "2": {"disk_size_mib": true}}}}}, "os_type": "Linux", "message_list": [], "create_spec": {"name": "Centos-K8SC@@{calm_array_index}@@", "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "13e8838f-dadd-4b0a-a65b-10598432ea88"}, "type": ""}], "power_state": "ON", "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: kube\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "image", "type": "", "name": "CENTOS_7_1801", "uuid": "278a212c-5d87-4679-95c0-92175216a73f"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 1, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 2, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 3, "adapter_type": "SCSI"}, "device_type": "DISK"}}]}}, "variable_list": [], "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, {"description": "", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "e368ebf3-1f5f-4183-8722-46578cd9fa82", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Provision_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "cc01f945-e9a9-48d9-a073-b13ed6ad0021"}, {"kind": "app_task", "name": "SYS_GEN__check_login_for_K8SM_Centos_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "de377133-8b34-4b5f-b80f-b4e77b918733"}], "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Provision_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "cc01f945-e9a9-48d9-a073-b13ed6ad0021"}, "edge_type": "inherent", "type": "", "uuid": "8b21a808-a8b3-4506-ac5f-dc68a0e6ca5d", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__check_login_for_K8SM_Centos_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "de377133-8b34-4b5f-b80f-b4e77b918733"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "02758ae8-6ff6-46c6-997b-1378b2c8e663"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Provision_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"name": "Centos-K8SM@@{calm_array_index}@@", "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "13e8838f-dadd-4b0a-a65b-10598432ea88"}, "type": ""}], "power_state": "ON", "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: kube\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "image", "type": "", "name": "CENTOS_7_1801", "uuid": "278a212c-5d87-4679-95c0-92175216a73f"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 1, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 2, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 3, "adapter_type": "SCSI"}, "device_type": "DISK"}}]}}, "timeout_secs": "", "type": "PROVISION_NUTANIX", "variable_list": [], "uuid": "cc01f945-e9a9-48d9-a073-b13ed6ad0021"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__check_login_for_K8SM_Centos_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "60", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "de377133-8b34-4b5f-b80f-b4e77b918733"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "02758ae8-6ff6-46c6-997b-1378b2c8e663"}, "message_list": [], "variable_list": [], "uuid": "0df06a85-3fca-46b9-9832-36e342f2fd60"}, "message_list": [], "name": "action_create"}, {"description": "System action for powering on an application", "type": "system", "uuid": "adbe5d99-7bda-49c1-96f2-93e9da24253e", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOn_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "297c6119-643e-4047-a26d-9412fb445850"}, {"kind": "app_task", "name": "check_login_for_K8SM_Centos_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "92125d59-f27e-4b18-a321-db60f79ad809"}], "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOn_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "297c6119-643e-4047-a26d-9412fb445850"}, "edge_type": "inherent", "type": "", "uuid": "2e5bbd11-63fe-4d76-8a5a-60477b703b62", "to_task_reference": {"kind": "app_task", "name": "check_login_for_K8SM_Centos_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "92125d59-f27e-4b18-a321-db60f79ad809"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "e53525ec-5f2d-4c11-8d57-86c02f79f2ee"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_PowerOn_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "297c6119-643e-4047-a26d-9412fb445850"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "check_login_for_K8SM_Centos_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CHECK_LOGIN", "timeout": "60", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@"}, "timeout_secs": "", "type": "CHECK_LOGIN", "variable_list": [], "uuid": "92125d59-f27e-4b18-a321-db60f79ad809"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "e53525ec-5f2d-4c11-8d57-86c02f79f2ee"}, "message_list": [], "variable_list": [], "uuid": "8ea4ca8f-e60f-482b-97be-874837a48bc2"}, "message_list": [], "name": "action_poweron"}, {"description": "System action for suspending an application", "type": "system", "uuid": "995d39ef-2686-42ff-94ee-ea19b4956239", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "8aad670d-88df-4746-93c8-e717e2d0b38e"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8aad670d-88df-4746-93c8-e717e2d0b38e"}, "message_list": [], "variable_list": [], "uuid": "37a29626-97bd-4943-a4f3-acc3c419bbf6"}, "message_list": [], "name": "action_suspend"}, {"description": "System action for modifying an application", "type": "system", "uuid": "ebe992b9-c1e0-4b4a-b941-259c66ef8d5b", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "3e082178-13d6-4cfc-8673-91c7d60414ad"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "3e082178-13d6-4cfc-8673-91c7d60414ad"}, "message_list": [], "variable_list": [], "uuid": "995dc176-32ef-4147-97bd-bfe616414637"}, "message_list": [], "name": "action_modify"}, {"description": "System action for powering off an application", "type": "system", "uuid": "673621eb-0ccb-47e1-88fd-677603dca48a", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Operation_PowerOff_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "b44560d7-0a7d-45fb-9ae2-fba8ed3614b4"}], "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "8041e576-a9ee-4ae1-a9a4-0c7ba5534db1"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Operation_PowerOff_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "GENERIC_OPERATION"}, "timeout_secs": "", "type": "VMOPERATION_NUTANIX", "variable_list": [], "uuid": "b44560d7-0a7d-45fb-9ae2-fba8ed3614b4"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8041e576-a9ee-4ae1-a9a4-0c7ba5534db1"}, "message_list": [], "variable_list": [], "uuid": "7e34d9c2-f67a-4bf7-bf86-d30e7fa69f1c"}, "message_list": [], "name": "action_poweroff"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "427e8cb0-921f-452c-b160-ab2107367c13", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Nutanix_Delete_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "e0afb5a5-3761-44da-9f6f-056b8d24bbf4"}], "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "489f9d4a-f81d-4f30-9893-29c006124c8c"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Nutanix_Delete_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "DELETE_NUTANIX", "variable_list": [], "uuid": "e0afb5a5-3761-44da-9f6f-056b8d24bbf4"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "489f9d4a-f81d-4f30-9893-29c006124c8c"}, "message_list": [], "variable_list": [], "uuid": "0d6ac6f6-20c3-4aa3-8425-f002b654d639"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "02836aff-aa59-487d-a4b5-5115ba6fa3f4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Substrate_Element_Delete_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "43bbc1c0-ae8a-4eab-8ab5-4a59bb43bf80"}], "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "7ecb6efd-772b-4546-8b18-ab2683c96e16"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Substrate_Element_Delete_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "43bbc1c0-ae8a-4eab-8ab5-4a59bb43bf80"}], "description": "", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "7ecb6efd-772b-4546-8b18-ab2683c96e16"}, "message_list": [], "variable_list": [], "uuid": "ae408b3c-0d37-4953-81bd-c96b8814aae3"}, "message_list": [], "name": "action_soft_delete"}], "type": "AHV_VM", "name": "K8SM_Centos", "state": "ACTIVE", "readiness_probe": {"connection_type": "SSH", "disable_readiness_probe": false, "timeout_secs": "60", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@", "connection_port": 22, "login_credential_local_reference": {"kind": "app_credential", "name": "KUBE", "uuid": "a2ac9727-833b-4f72-9d51-e23023121149"}}, "editables": {"readiness_probe": {"connection_type": true, "connection_port": true, "timeout_secs": true}, "create_spec": {"name": true, "resources": {"nic_list": {"0": {"subnet_reference": true}}, "num_vcpus_per_socket": true, "num_sockets": true, "memory_size_mib": true, "guest_customization": true, "disk_list": {"1": {"disk_size_mib": true}, "0": {"data_source_reference": true, "device_properties": {"disk_address": {"adapter_type": true}, "device_type": true}}, "3": {"disk_size_mib": true}, "2": {"disk_size_mib": true}}}}}, "os_type": "Linux", "message_list": [], "create_spec": {"name": "Centos-K8SM@@{calm_array_index}@@", "availability_zone_reference": null, "backup_policy": null, "type": "", "cluster_reference": null, "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "13e8838f-dadd-4b0a-a65b-10598432ea88"}, "type": ""}], "power_state": "ON", "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "parent_reference": null, "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: kube\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "image", "type": "", "name": "CENTOS_7_1801", "uuid": "278a212c-5d87-4679-95c0-92175216a73f"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 0, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 1, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 2, "adapter_type": "SCSI"}, "device_type": "DISK"}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "disk_address": {"type": "", "device_index": 3, "adapter_type": "SCSI"}, "device_type": "DISK"}}]}}, "variable_list": [], "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}], "credential_definition_list": [{"username": "kube", "description": "", "secret": {"attrs": {"is_secret_modified": false, "secret_reference": {}}}, "name": "KUBE", "state": "ACTIVE", "editables": {"username": true, "secret": true}, "type": "KEY", "uuid": "a2ac9727-833b-4f72-9d51-e23023121149"}], "app_profile_list": [{"deployment_create_list": [{"description": "", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "39ea8225-b581-44dc-91e8-0c5eca0b606d", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__DE_Provision_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "e7d48c60-8730-4d60-b38d-6ed9e11e69be"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "dd7c71db-1993-4cc5-ac2c-b3940f452a90"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "1e012630-a15c-43d5-ac4a-2ca7e15c3d54"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "76487cfa-604c-4b8c-bb2e-33247d101e27"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "3eb08caa-98fd-4003-a474-e14fde2fecae"}], "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "76487cfa-604c-4b8c-bb2e-33247d101e27"}, "edge_type": "inherent", "type": "", "uuid": "8e1689f3-6143-480d-b8e1-8a5122bca9ab", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "3eb08caa-98fd-4003-a474-e14fde2fecae"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "1e012630-a15c-43d5-ac4a-2ca7e15c3d54"}, "edge_type": "inherent", "type": "", "uuid": "8df1f687-ef10-4d84-8f7e-7e1bba5b7e39", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "76487cfa-604c-4b8c-bb2e-33247d101e27"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "e7d48c60-8730-4d60-b38d-6ed9e11e69be"}, "edge_type": "inherent", "type": "", "uuid": "56cd5df7-2f4b-4878-94f8-308a2b0934d4", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "dd7c71db-1993-4cc5-ac2c-b3940f452a90"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "dd7c71db-1993-4cc5-ac2c-b3940f452a90"}, "edge_type": "inherent", "type": "", "uuid": "dd825c08-d3e7-4842-8642-596a1be61719", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "1e012630-a15c-43d5-ac4a-2ca7e15c3d54"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "6920db5b-b8d2-42b5-8c59-975d5458ca41"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Provision_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "CREATE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "e7d48c60-8730-4d60-b38d-6ed9e11e69be"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "1b5006dd-124e-48c0-a68d-af0e325ce100"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "dd7c71db-1993-4cc5-ac2c-b3940f452a90"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "91ed74c0-ac3a-4c01-8ca3-442e2b767a1d"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "1e012630-a15c-43d5-ac4a-2ca7e15c3d54"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "39d74fe7_runbook", "uuid": "40fb0a0b-51cc-4b83-ab68-5a518d6cfe8d"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "76487cfa-604c-4b8c-bb2e-33247d101e27"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "05c2f01a_runbook", "uuid": "9e006603-1d50-4066-a7a7-5730b21afebc"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "3eb08caa-98fd-4003-a474-e14fde2fecae"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "6920db5b-b8d2-42b5-8c59-975d5458ca41"}, "message_list": [], "variable_list": [], "uuid": "9b9d7d82-3557-42e7-bbfa-c0d6d7481a41"}, "message_list": [], "name": "action_create"}, {"description": "System action for starting an application", "type": "system", "uuid": "185943fd-5afa-463a-b563-f6c7a611a300", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "c96c1c1b-9156-4f68-a40b-35825281ee6e"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "a88736f0-da22-43c4-a666-48d12622a75f"}], "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "c96c1c1b-9156-4f68-a40b-35825281ee6e"}, "edge_type": "inherent", "type": "", "uuid": "83d59c09-ab4a-46ea-80a5-f0116176eb45", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "a88736f0-da22-43c4-a666-48d12622a75f"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "612fefa4-e9a8-4bfb-8a63-fe7f0daed69f"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "36914e16-e284-4a21-b351-95ee908dade1"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "c96c1c1b-9156-4f68-a40b-35825281ee6e"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "05c2f01a_runbook", "uuid": "9e006603-1d50-4066-a7a7-5730b21afebc"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "a88736f0-da22-43c4-a666-48d12622a75f"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "612fefa4-e9a8-4bfb-8a63-fe7f0daed69f"}, "message_list": [], "variable_list": [], "uuid": "ef0cbf84-6e8a-4bb2-8663-afe0166431f9"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "04385092-d920-40ab-801f-17fe0a7a5b68", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "85f4442b-f400-49a2-a718-795ed9367a79"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "1550f7ee-b0f5-4a63-8def-1385d255b747"}], "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "85f4442b-f400-49a2-a718-795ed9367a79"}, "edge_type": "inherent", "type": "", "uuid": "f1ad3671-ad8e-4586-a114-573f183f7a73", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "1550f7ee-b0f5-4a63-8def-1385d255b747"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "3c08c5a5-8169-45d4-8fdf-8dbfddabab27"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "49e3a785_runbook", "uuid": "f80dcd36-ad50-47e2-ad7e-0a02d75c0cb6"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "85f4442b-f400-49a2-a718-795ed9367a79"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "9d7eec6c-0493-4701-94ca-6b59852f348a"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "1550f7ee-b0f5-4a63-8def-1385d255b747"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "3c08c5a5-8169-45d4-8fdf-8dbfddabab27"}, "message_list": [], "variable_list": [], "uuid": "bf6b8c1e-7e1b-4c5a-a1d0-a2e3112e223e"}, "message_list": [], "name": "action_stop"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "092467d7-e67f-45a6-a1a7-d893c3f6baef", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "085b5da5-aa6e-4b59-8ecf-ca4f993407e9"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "d9b33de6-87b2-456d-be31-3652b5feb6fc"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "e3fbd333-4f11-45c3-9889-3ad7f9be0e75"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "7ea5d2f6-f543-4723-aabc-629943978723"}, {"kind": "app_task", "name": "SYS_GEN__DE_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "f3c9d2cb-8e14-4ff9-beeb-959bd1ac9092"}], "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "085b5da5-aa6e-4b59-8ecf-ca4f993407e9"}, "edge_type": "inherent", "type": "", "uuid": "c8fc1abd-8779-4ce2-8f32-21bbd1fbb6da", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "d9b33de6-87b2-456d-be31-3652b5feb6fc"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "d9b33de6-87b2-456d-be31-3652b5feb6fc"}, "edge_type": "inherent", "type": "", "uuid": "235b47f6-5775-48da-ad9d-f2f313679bca", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "e3fbd333-4f11-45c3-9889-3ad7f9be0e75"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "e3fbd333-4f11-45c3-9889-3ad7f9be0e75"}, "edge_type": "inherent", "type": "", "uuid": "febef786-d47e-4cb5-9531-c70cb677dd35", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "7ea5d2f6-f543-4723-aabc-629943978723"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "7ea5d2f6-f543-4723-aabc-629943978723"}, "edge_type": "inherent", "type": "", "uuid": "b48d9f9a-63cf-44b9-a10e-cb41611f1f8f", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "f3c9d2cb-8e14-4ff9-beeb-959bd1ac9092"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "f35a26fe-debc-4437-a954-4c20b143273d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "49e3a785_runbook", "uuid": "f80dcd36-ad50-47e2-ad7e-0a02d75c0cb6"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "085b5da5-aa6e-4b59-8ecf-ca4f993407e9"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "b00241d6_runbook", "uuid": "3dd9027c-7515-4ae5-929c-9a2ad6dd7a59"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "d9b33de6-87b2-456d-be31-3652b5feb6fc"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "fb1dd5a1-a20e-413c-80e4-662b28c92ff7"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e3fbd333-4f11-45c3-9889-3ad7f9be0e75"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "321aeab5-a726-48b7-81f7-26329d52a9fc"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "7ea5d2f6-f543-4723-aabc-629943978723"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "f3c9d2cb-8e14-4ff9-beeb-959bd1ac9092"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "f35a26fe-debc-4437-a954-4c20b143273d"}, "message_list": [], "variable_list": [], "uuid": "05399943-009d-476a-9788-caffefcfebb0"}, "message_list": [], "name": "action_delete"}, {"description": "System action for scaleout", "type": "system", "uuid": "9ab55105-d39c-4425-9959-464aac91e4de", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Deployment_Scaleout_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "29838d8a-775a-4c5a-9229-3bf3f7268971"}], "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "420348e4-72ca-4033-abb4-5f4f4742011d"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Deployment_Scaleout_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"scaling_count": "@@{scaling_count}@@", "type": "", "scaling_type": "SCALEOUT"}, "timeout_secs": "", "type": "SCALING", "variable_list": [], "uuid": "29838d8a-775a-4c5a-9229-3bf3f7268971"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "420348e4-72ca-4033-abb4-5f4f4742011d"}, "message_list": [], "variable_list": [], "uuid": "8a94b0ee-5410-403b-aaf3-155e81aba838"}, "message_list": [], "name": "action_scaleout"}, {"description": "System action for scalein", "type": "system", "uuid": "fd8bd7fa-1d13-4dfc-99b9-223734ce5f45", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Deployment_Scalein_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "0ed81739-8d07-41e7-b5e4-5f4865ee6186"}], "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "4c6374bd-4f50-42d0-b99c-3e521298c03c"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Deployment_Scalein_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"scaling_count": "@@{scaling_count}@@", "type": "", "scaling_type": "SCALEIN"}, "timeout_secs": "", "type": "SCALING", "variable_list": [], "uuid": "0ed81739-8d07-41e7-b5e4-5f4865ee6186"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "4c6374bd-4f50-42d0-b99c-3e521298c03c"}, "message_list": [], "variable_list": [], "uuid": "1aa3e25f-c36b-450a-b589-cd26e587901e"}, "message_list": [], "name": "action_scalein"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "49d614df-3c5c-4e7f-8aed-c63cba59c8d4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "257b744b-4313-457d-a074-fcffc68c9211"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "054fb9f8-9c0e-46ab-b3c4-cc3b5ffb0589"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "a33a9f53-dc5b-4076-969c-9f1cd4b9f1dd"}, {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "240c569f-cfcc-4857-803f-14528da4b2c0"}], "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "257b744b-4313-457d-a074-fcffc68c9211"}, "edge_type": "inherent", "type": "", "uuid": "32cdc6be-b40d-4064-b7b1-9f99d0ea497c", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "054fb9f8-9c0e-46ab-b3c4-cc3b5ffb0589"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "054fb9f8-9c0e-46ab-b3c4-cc3b5ffb0589"}, "edge_type": "inherent", "type": "", "uuid": "547188d9-4849-4888-bb6a-4778ef0f6bb1", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "a33a9f53-dc5b-4076-969c-9f1cd4b9f1dd"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "a33a9f53-dc5b-4076-969c-9f1cd4b9f1dd"}, "edge_type": "inherent", "type": "", "uuid": "26e98b22-073f-4361-992c-cfad44d05f7a", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "240c569f-cfcc-4857-803f-14528da4b2c0"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "3cc1f914-fa21-4813-90aa-30d5a7b8f76f"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "0efd0a0c-e330-406a-a24a-049ab7dead38"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "257b744b-4313-457d-a074-fcffc68c9211"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "054fb9f8-9c0e-46ab-b3c4-cc3b5ffb0589"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "a747edce-4a4f-4e8c-ace5-c7ae86df0940"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "a33a9f53-dc5b-4076-969c-9f1cd4b9f1dd"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Soft_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "240c569f-cfcc-4857-803f-14528da4b2c0"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "3cc1f914-fa21-4813-90aa-30d5a7b8f76f"}, "message_list": [], "variable_list": [], "uuid": "4db7bc4f-5950-4889-9eb9-33d681063977"}, "message_list": [], "name": "action_soft_delete"}], "message_list": [], "editables": {"min_replicas": true}, "name": "7e23eb76_deployment", "state": "ACTIVE", "max_replicas": "3", "package_local_reference_list": [{"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}], "substrate_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "min_replicas": "3", "variable_list": [], "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, {"description": "", "action_list": [{"description": "System action for creating an application", "type": "system", "uuid": "f1506f08-8b00-43d4-bfc4-0582795acad6", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__DE_Provision_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "234df38b-d893-4585-841b-2e4cbeb2f1ee"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8bdb908f-4fb4-46b0-996b-becbe80d667e"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "52b00978-5c8c-43e0-89f2-4b90fa1f80e3"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "913a7eb9-4fa4-4c3f-9782-76128510008a"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "7b90fdd9-b170-4fff-9184-1839de234eb4"}], "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "913a7eb9-4fa4-4c3f-9782-76128510008a"}, "edge_type": "inherent", "type": "", "uuid": "b7982338-ec1e-4cbd-9a0a-311388e50ef7", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "7b90fdd9-b170-4fff-9184-1839de234eb4"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "52b00978-5c8c-43e0-89f2-4b90fa1f80e3"}, "edge_type": "inherent", "type": "", "uuid": "24018ec9-c7e5-4011-b5b1-8bade4ae2891", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "913a7eb9-4fa4-4c3f-9782-76128510008a"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8bdb908f-4fb4-46b0-996b-becbe80d667e"}, "edge_type": "inherent", "type": "", "uuid": "c8562cb3-579f-4670-8ea3-960a91372ac8", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "52b00978-5c8c-43e0-89f2-4b90fa1f80e3"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "234df38b-d893-4585-841b-2e4cbeb2f1ee"}, "edge_type": "inherent", "type": "", "uuid": "7d0ee17b-8cca-4786-a216-a72774a2612f", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8bdb908f-4fb4-46b0-996b-becbe80d667e"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "afe38ee8-b755-462e-9486-7c80a1442fee"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Provision_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "CREATE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "234df38b-d893-4585-841b-2e4cbeb2f1ee"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "0df06a85-3fca-46b9-9832-36e342f2fd60"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "8bdb908f-4fb4-46b0-996b-becbe80d667e"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "60420e23-3e99-4605-8a48-e815451148eb"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "52b00978-5c8c-43e0-89f2-4b90fa1f80e3"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "925ba7c0_runbook", "uuid": "6fc3922e-1f78-49be-bb87-69f62b307a51"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "913a7eb9-4fa4-4c3f-9782-76128510008a"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "af446214_runbook", "uuid": "3271540b-0d85-412b-8bbc-3b76b78d7e05"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "7b90fdd9-b170-4fff-9184-1839de234eb4"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "afe38ee8-b755-462e-9486-7c80a1442fee"}, "message_list": [], "variable_list": [], "uuid": "fa5839d9-6589-4cf7-8944-85cff484cf93"}, "message_list": [], "name": "action_create"}, {"description": "System action for starting an application", "type": "system", "uuid": "e37821af-e87c-485a-8ebf-1373a3cb80cc", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "e4bb510b-504d-45c7-878a-38a331370043"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "f06e1897-0fbc-4073-905d-5491711b2d86"}], "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "e4bb510b-504d-45c7-878a-38a331370043"}, "edge_type": "inherent", "type": "", "uuid": "cd47f37b-0cb7-4c15-9d0e-03331f6034f3", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "f06e1897-0fbc-4073-905d-5491711b2d86"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "16bfdac9-af5e-4a9e-b893-8aff52051f57"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8ea4ca8f-e60f-482b-97be-874837a48bc2"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e4bb510b-504d-45c7-878a-38a331370043"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "af446214_runbook", "uuid": "3271540b-0d85-412b-8bbc-3b76b78d7e05"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "f06e1897-0fbc-4073-905d-5491711b2d86"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "16bfdac9-af5e-4a9e-b893-8aff52051f57"}, "message_list": [], "variable_list": [], "uuid": "483e2a39-6ebb-4b62-bdc5-832aeef6293a"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "968d646e-7f9e-487e-b1ec-fb1eb2c3d1d7", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "3e035194-fbd9-4751-a487-fbf64c34496c"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "f763b2d8-f6b2-456d-bbf7-a984ce99bd12"}], "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "3e035194-fbd9-4751-a487-fbf64c34496c"}, "edge_type": "inherent", "type": "", "uuid": "202869d0-da3e-48a9-9e99-4711f5c22579", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "f763b2d8-f6b2-456d-bbf7-a984ce99bd12"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "0ef7fafb-2700-493e-b037-649cb84d7eba"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "bbfee442_runbook", "uuid": "d55140a3-9de7-415c-963d-3794e26814ea"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "3e035194-fbd9-4751-a487-fbf64c34496c"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "7e34d9c2-f67a-4bf7-bf86-d30e7fa69f1c"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "f763b2d8-f6b2-456d-bbf7-a984ce99bd12"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "0ef7fafb-2700-493e-b037-649cb84d7eba"}, "message_list": [], "variable_list": [], "uuid": "c968ad71-711b-41bf-953c-86bebaaa8df2"}, "message_list": [], "name": "action_stop"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "ac6dad65-cc8d-4885-9947-a0511eb8974c", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "22cfa423-d00c-4172-816b-94117da5a601"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "52bc47c1-7e80-436a-b972-ab96c299f2ba"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "e25cf71a-68cc-481c-992a-5174a9e83811"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "4b300922-5f45-41ea-bf60-f4aff45673c1"}, {"kind": "app_task", "name": "SYS_GEN__DE_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "7f265890-a73d-4c67-889d-ce56e3e2db13"}], "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "22cfa423-d00c-4172-816b-94117da5a601"}, "edge_type": "inherent", "type": "", "uuid": "3259a77b-2b06-4b23-a135-30e22af73d15", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "52bc47c1-7e80-436a-b972-ab96c299f2ba"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "52bc47c1-7e80-436a-b972-ab96c299f2ba"}, "edge_type": "inherent", "type": "", "uuid": "75609411-c542-45bc-a9ee-00fc4ca1cb53", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "e25cf71a-68cc-481c-992a-5174a9e83811"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "4b300922-5f45-41ea-bf60-f4aff45673c1"}, "edge_type": "inherent", "type": "", "uuid": "12a7516c-dd2e-4556-ac72-68dc3dbaceac", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "7f265890-a73d-4c67-889d-ce56e3e2db13"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "e25cf71a-68cc-481c-992a-5174a9e83811"}, "edge_type": "inherent", "type": "", "uuid": "c30d7f5d-fb75-4727-b03c-49bd882a95df", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "4b300922-5f45-41ea-bf60-f4aff45673c1"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "3d5bd271-c9ca-452b-ad1c-6d129f8344c6"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "bbfee442_runbook", "uuid": "d55140a3-9de7-415c-963d-3794e26814ea"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "22cfa423-d00c-4172-816b-94117da5a601"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "28e74b96_runbook", "uuid": "5b4efcf8-a145-4233-ab6b-8205959cd6ee"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "52bc47c1-7e80-436a-b972-ab96c299f2ba"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "032a9ce8-ae3d-42da-b08f-e282f8b825d5"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e25cf71a-68cc-481c-992a-5174a9e83811"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "0d6ac6f6-20c3-4aa3-8425-f002b654d639"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "4b300922-5f45-41ea-bf60-f4aff45673c1"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "7f265890-a73d-4c67-889d-ce56e3e2db13"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "3d5bd271-c9ca-452b-ad1c-6d129f8344c6"}, "message_list": [], "variable_list": [], "uuid": "6be31599-80fd-4562-b192-49df15391074"}, "message_list": [], "name": "action_delete"}, {"description": "System action for scaleout", "type": "system", "uuid": "a26cdcfd-953e-43fe-849a-56f8fa5f4aee", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Deployment_Scaleout_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "3999bef6-fbe8-4e7d-be4d-5b237822b003"}], "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "b8470aa6-6171-4dcb-905b-0a7854bc3f61"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Deployment_Scaleout_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"scaling_count": "@@{scaling_count}@@", "type": "", "scaling_type": "SCALEOUT"}, "timeout_secs": "", "type": "SCALING", "variable_list": [], "uuid": "3999bef6-fbe8-4e7d-be4d-5b237822b003"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "b8470aa6-6171-4dcb-905b-0a7854bc3f61"}, "message_list": [], "variable_list": [], "uuid": "958116ac-dc25-48e6-a770-ef09446ea3b3"}, "message_list": [], "name": "action_scaleout"}, {"description": "System action for scalein", "type": "system", "uuid": "b6ad5194-ef12-4130-8d1a-2955d194e12d", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__Deployment_Scalein_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "7852b7aa-e616-44aa-bbad-519008dc9900"}], "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "215bdc30-1c6a-4f50-a8ab-b8c181d3b338"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Deployment_Scalein_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"scaling_count": "@@{scaling_count}@@", "type": "", "scaling_type": "SCALEIN"}, "timeout_secs": "", "type": "SCALING", "variable_list": [], "uuid": "7852b7aa-e616-44aa-bbad-519008dc9900"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "215bdc30-1c6a-4f50-a8ab-b8c181d3b338"}, "message_list": [], "variable_list": [], "uuid": "ce335e93-c09d-4abd-a58a-f6619feeb9b3"}, "message_list": [], "name": "action_scalein"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "e341047e-4ee7-4ceb-848a-a9666ca80e76", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "479b9d30-222a-4846-8b64-ac1887f29950"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "9300d33f-53d6-4de5-9aba-3c3b1bfca29a"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "4ec2d607-7f43-4be4-a227-13e659d37ef3"}, {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "c45096dc-06a4-4c80-a901-bbde8a1ae084"}], "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "479b9d30-222a-4846-8b64-ac1887f29950"}, "edge_type": "inherent", "type": "", "uuid": "a4fa255d-f3f1-4b70-9481-7b7bd47cee17", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "9300d33f-53d6-4de5-9aba-3c3b1bfca29a"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "4ec2d607-7f43-4be4-a227-13e659d37ef3"}, "edge_type": "inherent", "type": "", "uuid": "1d243887-3aec-4c73-8f15-3bf5b3409d05", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "c45096dc-06a4-4c80-a901-bbde8a1ae084"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "9300d33f-53d6-4de5-9aba-3c3b1bfca29a"}, "edge_type": "inherent", "type": "", "uuid": "af359e7a-3397-4b73-9c97-1b77d10cf59d", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "4ec2d607-7f43-4be4-a227-13e659d37ef3"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "bc29cda0-c0e4-4e47-8186-e60fc9e2be5d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "539a67d3-aec8-4c12-ae0f-605b6052c026"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "479b9d30-222a-4846-8b64-ac1887f29950"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "9300d33f-53d6-4de5-9aba-3c3b1bfca29a"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "ae408b3c-0d37-4953-81bd-c96b8814aae3"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "4ec2d607-7f43-4be4-a227-13e659d37ef3"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Soft_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "c45096dc-06a4-4c80-a901-bbde8a1ae084"}], "description": "", "name": "SYS_GEN__Runbook_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Deployment_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "bc29cda0-c0e4-4e47-8186-e60fc9e2be5d"}, "message_list": [], "variable_list": [], "uuid": "e5b6919f-cad5-423a-bd9c-a71c4dc16a20"}, "message_list": [], "name": "action_soft_delete"}], "message_list": [], "editables": {"min_replicas": true}, "name": "0fd632f7_deployment", "state": "ACTIVE", "max_replicas": "2", "package_local_reference_list": [{"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}], "substrate_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "min_replicas": "2", "variable_list": [], "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}], "description": "", "action_list": [{"description": "", "type": "user", "uuid": "d4014663-1faa-403d-96e4-106ad3094c4c", "state": "ACTIVE", "critical": false, "attrs": {}, "runbook": {"task_definition_list": [{"description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Test", "uuid": "7dbeafb2-cf03-4b91-adbe-9d8b44dc9a2a"}], "name": "fc93ef5a_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "6a2a2d39-1622-4473-b5fa-4a90c985e4e4"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "Test", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\n\nexport PATH=$PATH:/opt/bin\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nCONTROLLER_IP=\"@@{calm_array_address}@@\"\nWORKER_IP=\"@@{K8SM_Centos.address}@@\"\nMASTER_IP=\"@@{address}@@\"\n\nfunction log_msg() {\n\tlocal logger=$(basename \"$0\")\n\tprintf \"[${logger}] $1\\n\"\n}\n\n\n# SSH to a node ($1), run command ($2)).\nfunction ssh_run_command() {\n\tlocal node=\"$1\"\n\tlocal command=\"$2\"\n\tssh  -oBatchMode=yes -oConnectTimeout=10 -o StrictHostKeyChecking=no \\\n\t\t-o UserKnownHostsFile=/dev/null -q ${node} ${command} 2>&1 | tr -d '\\r\\n'\n}\n\n\nfunction check_ssh_connectivity() {\n\tlog_msg \"  Checking SSH connectivity to each node (from this host)...\"\n\tfor master in $(echo ${CONTROLLER_IP} | sed \"s/,/ /g\"); do\n\t\tlog_msg \"  Checking SSH connectivity to ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"echo connected\")\n\t\tif [[ $ret != \"connected\" ]]; then\n\t\t\tlog_msg \"  [FAILED] Could not ssh to master ${master}\"\n\t\t\tlog_msg \"  Only IPs in ${CONTROLLER_IP} are allowed to SSH to this node\"\n\t\t\texit 1\n\t\tfi\n\tdone\n\n\tfor worker in $(echo ${WORKER_IP} | sed \"s/,/ /g\"); do\n\t\tlog_msg \"  Checking SSH connectivity to ${worker}\"\n\t\tret=$(ssh_run_command \"${worker}\" \"echo connected\")\n\t\tif [[ $ret != \"connected\" ]]; then\n\t\t\tlog_msg \"  [FAILED] Could not ssh to worker ${worker}\"\n\t\t\tlog_msg \"  Only IPs in ${WORKER_IP} are allowed to SSH to this node\"\n\t\t\texit 1\n\t\tfi\n\tdone\n\n}\n\nfunction check_system_services() {\n\n\tlog_msg \"  Checking whether expected system services are running on each node...\"\n\tfor master in $(echo ${CONTROLLER_IP} | sed \"s/,/ /g\"); do\n\t\tlog_msg \"  Checking docker service on ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"sudo systemctl status docker 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected docker service is not running on master $master\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kubelet service on ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"sudo systemctl status kubelet 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected kubelet service is not running on master $master\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kube-etcd service on ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"sudo systemctl status kube-etcd 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected kube-etcd service is not running on master $master\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kube-proxy service on ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"sudo docker ps | grep --only-matching \\\"hyperkube proxy\\\" | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"hyperkube proxy\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected hyperkube proxy service is not running on master $master\"\n\t\t\texit 1\n\t\tfi\n\tdone\n\n\tfor worker in $(echo ${WORKER_IP} | sed \"s/,/ /g\"); do\n\t\tlog_msg \"  Checking docker service on ${worker}\"\n\t\tret=$(ssh_run_command \"${worker}\" \"sudo systemctl status docker 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected docker service is not running on worker $worker\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kubelet service on ${worker}\"\n\t\tret=$(ssh_run_command \"${worker}\" \"sudo systemctl status kubelet 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected kubelet service is not running on worker $worker\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kube-proxy service on ${worker}\"\n\t\tret=$(ssh_run_command \"${worker}\" \"sudo docker ps | grep --only-matching \\\"hyperkube proxy\\\" | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"hyperkube proxy\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected hyperkube proxy service is not running on worker $worker\"\n\t\t\texit 1\n\t\tfi\n\n\tdone\n\n}\n\nfunction check_k8s_healthz_through_lb() {\n\tlog_msg \"  Checking status of /healthz endpoint...\"\n\toutput=$(curl --insecure --max-time 30 https://${MASTER_IP}:443/healthz 2>/dev/null)\n\tif [[ $output != \"ok\" ]]; then\n\t\tlog_msg \"  [FAILED] Master node /healthz is not available\"\n\t\texit 1\n\tfi\n\n}\n\nfunction check_get_nodes() {\n\tlog_msg \"  Running 'kubectl get nodes' a number of times through the master...\"\n\texpected_nodes=$(expr $(echo ${CONTROLLER_IP},${WORKER_IP} | tr -cd , | wc -c) + 1)\n\tfor i in {1..20}; do\n\t\tcount=$(kubectl get nodes --no-headers 2>/dev/null | grep \"Ready\" | wc -l)\n\t\tlog_msg \"  Running 'kubectl get nodes' count is ${count} out of ${expected_nodes} expected...\"\n\t\tif [ \"$count\" -lt $expected_nodes ]; then\n\t\t\tlog_msg \"  [FAILED] kubectl get nodes reported less healthy nodes than expected\"\n\t\t\tkubectl get nodes\n\t\t\texit 1\n\t\tfi\n\tdone\n}\n\nfunction check_kube-dns() {\n\tlog_msg \"  Checking status of kube-dns pod...\"\n\toutput=$(kubectl get pods --namespace=kube-system -l k8s-app=kube-dns 2>&1 | grep kube-dns | awk '{print $3}')\n\tlog_msg \"  kube-dns pod status is ${output}\"\n\tif [[ $output != \"Running\" ]]; then\n\t\tlog_msg \"  [FAILED] kube-dns is not running in the cluster\"\n\t\texit 1\n\tfi\n\n\toutput=$(kubectl get pods --namespace=kube-system -l k8s-app=kube-dns 2>&1 | grep kube-dns | awk '{print $2}')\n\tlog_msg \"  expected kube-dns pod is ${output}\"\n\tif [[ $output != \"3/3\" ]]; then\n\t\tlog_msg \"  [FAILED] expected 3/3 kube-dns pods to be running in the cluster\"\n\t\texit 1\n\tfi\n}\n\nfunction check_nginx_deployment() {\n\tlog_msg \"  Checking an app deployment of nginx exposed as a service...\"\n\texpected_nodes=$(expr $(echo ${CONTROLLER_IP},${WORKER_IP} | tr -cd , | wc -c) + 2)\n\tkubectl run nginx --image=\"nginx\" --port=80 --replicas=${expected_nodes} 1>/dev/null\n\tkubectl expose deployment nginx --type NodePort 1>/dev/null\n\n\tnodePort=\"UNSET\"\n\tmax_tries=0\n\tuntil [ $nodePort != \"UNSET\" ] || [ $max_tries -eq 10 ]; do\n\t\tnodePort=$(kubectl get svc nginx --output=jsonpath='{range .spec.ports[0]}{.nodePort}')\n\t\tmax_tries=$((max_tries + 1))\n\tdone\n\n\tif [[ $nodePort == \"UNSET\" ]]; then\n\t\tlog_msg \"  [FAILED] could not retrieve the NodePort of the nginx service\"\n\t\texit 1\n\tfi\n\n\t# Avoid possible hang if port is not ready\n\tsleep 10\n    for i in {1..5}; do\n\t    for worker in $(echo ${CONTROLLER_IP},${WORKER_IP} | sed \"s/,/ /g\"); do\n\t\t    output=$(curl --max-time 30 http://$worker:$nodePort 2>/dev/null)\n            if [[ -z \"$output\" ]]; then\n\t\t\t    log_msg \"   [FAILED] nginx deployment service is not accessible on http://$worker:$nodePort\"\n\t\t\t    exit 1\n            fi\n\t\t    if [[ $output != *\"Welcome to nginx!\"* ]]; then\n\t\t\t    log_msg \"  [FAILED] nginx deployment service is not accessible on http://$worker:$nodePort\"\n\t\t    \texit 1\n\t    \tfi\n    \tdone\n    done\n    kubectl delete deployment nginx 1>/dev/null\n}\n\nfunction print_success() {\n\tcat <<EOF\n\nThe Kubernetes cluster is up and appears to be healthy.\n$(kubectl cluster-info)\nEOF\n}\n\nlog_msg \"Running some basic checks on Kubernetes cluster....\"\ncheck_ssh_connectivity\ncheck_system_services\ncheck_k8s_healthz_through_lb\ncheck_get_nodes\ncheck_kube-dns\ncheck_nginx_deployment\n\nprint_success\n\nexit 0", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "7dbeafb2-cf03-4b91-adbe-9d8b44dc9a2a"}], "description": "", "name": "ed66499a_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "fc93ef5a_dag", "uuid": "6a2a2d39-1622-4473-b5fa-4a90c985e4e4"}, "message_list": [], "variable_list": [], "uuid": "c5fd4815-7fc2-4f75-b1f9-16f1020c92ab"}, "message_list": [], "name": "Test"}, {"description": "System action for creating an application", "type": "system", "uuid": "7e3e84d5-a392-494b-9968-e010573668f3", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Centos", "uuid": "d82eff07-5b3f-41c8-bda3-69b94136786c"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__DE_Provision_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "3e87d575-6cdf-4fa6-a8fa-88257a960f74"}, {"kind": "app_task", "name": "SYS_GEN__DE_Provision_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "252f3049-629b-42c4-b11a-0a395233f990"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "9b1e95a1-8c06-4bf0-a851-ee958ca612d6"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "ed892525-7edb-420a-b5bc-09d5861d001f"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "ff2b461f-7695-4ee5-8cdb-8a48fc6d2be5"}, {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "fd24b2f6-fc01-49d9-877f-f6ac038d1bcb"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "d75fe661-1b27-4304-8ada-f854be35f197"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "d9ddac78-7faf-42a1-902f-aaf37226c38d"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "efeb578f-614f-4e95-aab2-f7b5bba49d4c"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "381b0541-7fdc-4fbb-8d73-6e6349966d73"}], "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "d9ddac78-7faf-42a1-902f-aaf37226c38d"}, "edge_type": "inherent", "type": "", "uuid": "01324b0c-8272-49c9-9c41-563b79830e8b", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "381b0541-7fdc-4fbb-8d73-6e6349966d73"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "ff2b461f-7695-4ee5-8cdb-8a48fc6d2be5"}, "edge_type": "inherent", "type": "", "uuid": "fab038bd-ae49-4f3f-aeaa-3ec177cd31d2", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "d9ddac78-7faf-42a1-902f-aaf37226c38d"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "3e87d575-6cdf-4fa6-a8fa-88257a960f74"}, "edge_type": "inherent", "type": "", "uuid": "efae6d85-4138-4da5-bd5a-455a8a2b7b3d", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "9b1e95a1-8c06-4bf0-a851-ee958ca612d6"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "9b1e95a1-8c06-4bf0-a851-ee958ca612d6"}, "edge_type": "inherent", "type": "", "uuid": "bd4ed64b-c1b3-4e61-ac50-230a0d4eb164", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "ff2b461f-7695-4ee5-8cdb-8a48fc6d2be5"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "d75fe661-1b27-4304-8ada-f854be35f197"}, "edge_type": "inherent", "type": "", "uuid": "423fb8dd-c8b7-477e-afc1-c08721ea34f0", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "efeb578f-614f-4e95-aab2-f7b5bba49d4c"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "fd24b2f6-fc01-49d9-877f-f6ac038d1bcb"}, "edge_type": "inherent", "type": "", "uuid": "dd52d480-e31d-4633-af07-189ea397f36a", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "d75fe661-1b27-4304-8ada-f854be35f197"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "ed892525-7edb-420a-b5bc-09d5861d001f"}, "edge_type": "inherent", "type": "", "uuid": "ffa96dd6-cf6d-41e4-879a-31a6ec2875da", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "fd24b2f6-fc01-49d9-877f-f6ac038d1bcb"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Provision_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "252f3049-629b-42c4-b11a-0a395233f990"}, "edge_type": "inherent", "type": "", "uuid": "f4b5612a-1ddd-49a9-a818-41cdb4a22db1", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "ed892525-7edb-420a-b5bc-09d5861d001f"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "ed892525-7edb-420a-b5bc-09d5861d001f"}, "edge_type": "dependency", "type": "", "uuid": "3d184e1a-6fed-4153-9183-9cfc833cabb1", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "ff2b461f-7695-4ee5-8cdb-8a48fc6d2be5"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "9b1e95a1-8c06-4bf0-a851-ee958ca612d6"}, "edge_type": "dependency", "type": "", "uuid": "9c3ba439-d8d7-4ade-a7fc-97d7ad7fbde3", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "fd24b2f6-fc01-49d9-877f-f6ac038d1bcb"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "3fcd817e-c376-4b1d-97a5-f763aa12e3c0"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Provision_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "CREATE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "3e87d575-6cdf-4fa6-a8fa-88257a960f74"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Provision_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "CREATE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "252f3049-629b-42c4-b11a-0a395233f990"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "1b5006dd-124e-48c0-a68d-af0e325ce100"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "9b1e95a1-8c06-4bf0-a851-ee958ca612d6"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "0df06a85-3fca-46b9-9832-36e342f2fd60"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "ed892525-7edb-420a-b5bc-09d5861d001f"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "91ed74c0-ac3a-4c01-8ca3-442e2b767a1d"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "ff2b461f-7695-4ee5-8cdb-8a48fc6d2be5"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "60420e23-3e99-4605-8a48-e815451148eb"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "fd24b2f6-fc01-49d9-877f-f6ac038d1bcb"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "925ba7c0_runbook", "uuid": "6fc3922e-1f78-49be-bb87-69f62b307a51"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "d75fe661-1b27-4304-8ada-f854be35f197"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "39d74fe7_runbook", "uuid": "40fb0a0b-51cc-4b83-ab68-5a518d6cfe8d"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "d9ddac78-7faf-42a1-902f-aaf37226c38d"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "af446214_runbook", "uuid": "3271540b-0d85-412b-8bbc-3b76b78d7e05"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "efeb578f-614f-4e95-aab2-f7b5bba49d4c"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "05c2f01a_runbook", "uuid": "9e006603-1d50-4066-a7a7-5730b21afebc"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "381b0541-7fdc-4fbb-8d73-6e6349966d73"}], "description": "", "name": "SYS_GEN__Runbook_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "uuid": "3fcd817e-c376-4b1d-97a5-f763aa12e3c0"}, "message_list": [], "variable_list": [], "uuid": "6b204f86-9464-4824-b35f-8df503ac3c44"}, "message_list": [], "name": "action_create"}, {"description": "System action for starting an application", "type": "system", "uuid": "2ca7730c-1e4a-42f2-8c9e-1ab30e6d845e", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Centos", "uuid": "d82eff07-5b3f-41c8-bda3-69b94136786c"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8a58a2f2-a4fc-472f-af27-083aad4d2ccd"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "90e71799-9387-4c66-a68a-7bed21b20dfa"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "6106e218-303d-46cd-bdd3-3e70ddaea5b9"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "77d146db-a850-4831-84fa-8e4b4afaadc4"}], "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "90e71799-9387-4c66-a68a-7bed21b20dfa"}, "edge_type": "inherent", "type": "", "uuid": "8fdbfe23-fb41-4c5d-a95c-6b02ec50158e", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "77d146db-a850-4831-84fa-8e4b4afaadc4"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8a58a2f2-a4fc-472f-af27-083aad4d2ccd"}, "edge_type": "inherent", "type": "", "uuid": "ccdacee1-6c36-4f5e-a48f-94586b150b8f", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "6106e218-303d-46cd-bdd3-3e70ddaea5b9"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "c1c08ef7-228c-4ff8-bc1f-40dbd3a9080e"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "8ea4ca8f-e60f-482b-97be-874837a48bc2"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "8a58a2f2-a4fc-472f-af27-083aad4d2ccd"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "36914e16-e284-4a21-b351-95ee908dade1"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "90e71799-9387-4c66-a68a-7bed21b20dfa"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "af446214_runbook", "uuid": "3271540b-0d85-412b-8bbc-3b76b78d7e05"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6106e218-303d-46cd-bdd3-3e70ddaea5b9"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "05c2f01a_runbook", "uuid": "9e006603-1d50-4066-a7a7-5730b21afebc"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "77d146db-a850-4831-84fa-8e4b4afaadc4"}], "description": "", "name": "SYS_GEN__Runbook_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "uuid": "c1c08ef7-228c-4ff8-bc1f-40dbd3a9080e"}, "message_list": [], "variable_list": [], "uuid": "2be81898-f885-43ce-aa17-677c56ae222d"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "8e1bce62-7fc9-4b08-a4e6-bf8912ea112c", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Centos", "uuid": "d82eff07-5b3f-41c8-bda3-69b94136786c"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "6662f660-e9b6-491a-961c-178a8a55f5f9"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "b3546715-b0a8-4c3c-bd3a-9c1ac8a602b3"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "e6e409cf-1040-4b02-9a48-c75f9f6e4ae0"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "02221fd9-8b67-49e1-86b4-e5affd238ed1"}], "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "6662f660-e9b6-491a-961c-178a8a55f5f9"}, "edge_type": "inherent", "type": "", "uuid": "3ba72153-500f-40b0-8b22-69dc0c7618df", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "e6e409cf-1040-4b02-9a48-c75f9f6e4ae0"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "b3546715-b0a8-4c3c-bd3a-9c1ac8a602b3"}, "edge_type": "inherent", "type": "", "uuid": "a8bebbd6-b919-4dc8-8667-83982b3bdbea", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "02221fd9-8b67-49e1-86b4-e5affd238ed1"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "3ef39aa2-05f1-4903-ad2c-b076990db7a9"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "49e3a785_runbook", "uuid": "f80dcd36-ad50-47e2-ad7e-0a02d75c0cb6"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6662f660-e9b6-491a-961c-178a8a55f5f9"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "bbfee442_runbook", "uuid": "d55140a3-9de7-415c-963d-3794e26814ea"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "b3546715-b0a8-4c3c-bd3a-9c1ac8a602b3"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "9d7eec6c-0493-4701-94ca-6b59852f348a"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e6e409cf-1040-4b02-9a48-c75f9f6e4ae0"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "7e34d9c2-f67a-4bf7-bf86-d30e7fa69f1c"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "02221fd9-8b67-49e1-86b4-e5affd238ed1"}], "description": "", "name": "SYS_GEN__Runbook_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "uuid": "3ef39aa2-05f1-4903-ad2c-b076990db7a9"}, "message_list": [], "variable_list": [], "uuid": "d2706479-c5da-41b1-bd71-49466bffe17f"}, "message_list": [], "name": "action_stop"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "6d52095f-7b19-42c4-a9ed-48e334fffdf4", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Centos", "uuid": "d82eff07-5b3f-41c8-bda3-69b94136786c"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "32eb591d-dbdd-489d-b370-0c9e91e935df"}, {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "cb6a63c4-d49b-4064-82da-609b4f47e0ec"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "aa04f14d-797f-43d4-aeb6-fcdecae77c18"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "040cd137-8d15-4717-8ef8-5dc819118a12"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "6063455b-b00e-4899-a0d4-aed40669fe58"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "c3234c1e-71ee-4d95-b48d-4eb786c5c306"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "fdc244a4-1cc6-4375-b4ac-d4ba836b8598"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "bf065521-8d4b-4395-85db-4f005855999d"}, {"kind": "app_task", "name": "SYS_GEN__DE_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "cc30d666-3b90-45cb-927f-b7bbfb5e74dc"}, {"kind": "app_task", "name": "SYS_GEN__DE_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "e1344fb1-a1a3-4275-a010-e5ef3771db3d"}], "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "cb6a63c4-d49b-4064-82da-609b4f47e0ec"}, "edge_type": "inherent", "type": "", "uuid": "042b4f17-7e08-44af-8100-637fbf800722", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "040cd137-8d15-4717-8ef8-5dc819118a12"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "040cd137-8d15-4717-8ef8-5dc819118a12"}, "edge_type": "inherent", "type": "", "uuid": "2f8de326-6402-47a5-a929-dab6d0baf215", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "c3234c1e-71ee-4d95-b48d-4eb786c5c306"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "c3234c1e-71ee-4d95-b48d-4eb786c5c306"}, "edge_type": "inherent", "type": "", "uuid": "228d7bd9-084e-42ab-beb2-785ff6970ec2", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "fdc244a4-1cc6-4375-b4ac-d4ba836b8598"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "fdc244a4-1cc6-4375-b4ac-d4ba836b8598"}, "edge_type": "inherent", "type": "", "uuid": "679cc121-c465-4e0a-bdb1-c7486c31bdc4", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "e1344fb1-a1a3-4275-a010-e5ef3771db3d"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "32eb591d-dbdd-489d-b370-0c9e91e935df"}, "edge_type": "inherent", "type": "", "uuid": "b15fcfe9-3b88-422b-8e84-f492d096a684", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "aa04f14d-797f-43d4-aeb6-fcdecae77c18"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "aa04f14d-797f-43d4-aeb6-fcdecae77c18"}, "edge_type": "inherent", "type": "", "uuid": "516c929c-66e9-4be8-811c-5a117ad955fd", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "6063455b-b00e-4899-a0d4-aed40669fe58"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "bf065521-8d4b-4395-85db-4f005855999d"}, "edge_type": "inherent", "type": "", "uuid": "e74340f0-0e06-4d1e-9043-f3054edd69d1", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "cc30d666-3b90-45cb-927f-b7bbfb5e74dc"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "6063455b-b00e-4899-a0d4-aed40669fe58"}, "edge_type": "inherent", "type": "", "uuid": "1ab0d304-4568-41bc-a250-37e70f8a4cf7", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "bf065521-8d4b-4395-85db-4f005855999d"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "c3234c1e-71ee-4d95-b48d-4eb786c5c306"}, "edge_type": "create_action_edge", "type": "", "uuid": "78747b14-f85e-426c-93dc-a944ad759c4a", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "bf065521-8d4b-4395-85db-4f005855999d"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "6063455b-b00e-4899-a0d4-aed40669fe58"}, "edge_type": "create_action_edge", "type": "", "uuid": "1358a6c4-004f-4551-85e7-0dd49f2bc42e", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "fdc244a4-1cc6-4375-b4ac-d4ba836b8598"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "e0ce308a-1e68-4270-9b4e-89d82fe636f6"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "bbfee442_runbook", "uuid": "d55140a3-9de7-415c-963d-3794e26814ea"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "32eb591d-dbdd-489d-b370-0c9e91e935df"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "49e3a785_runbook", "uuid": "f80dcd36-ad50-47e2-ad7e-0a02d75c0cb6"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "cb6a63c4-d49b-4064-82da-609b4f47e0ec"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "28e74b96_runbook", "uuid": "5b4efcf8-a145-4233-ab6b-8205959cd6ee"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "aa04f14d-797f-43d4-aeb6-fcdecae77c18"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "b00241d6_runbook", "uuid": "3dd9027c-7515-4ae5-929c-9a2ad6dd7a59"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "040cd137-8d15-4717-8ef8-5dc819118a12"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "032a9ce8-ae3d-42da-b08f-e282f8b825d5"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6063455b-b00e-4899-a0d4-aed40669fe58"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "fb1dd5a1-a20e-413c-80e4-662b28c92ff7"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "c3234c1e-71ee-4d95-b48d-4eb786c5c306"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "321aeab5-a726-48b7-81f7-26329d52a9fc"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "fdc244a4-1cc6-4375-b4ac-d4ba836b8598"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "0d6ac6f6-20c3-4aa3-8425-f002b654d639"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "bf065521-8d4b-4395-85db-4f005855999d"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "cc30d666-3b90-45cb-927f-b7bbfb5e74dc"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "e1344fb1-a1a3-4275-a010-e5ef3771db3d"}], "description": "", "name": "SYS_GEN__Runbook_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "uuid": "e0ce308a-1e68-4270-9b4e-89d82fe636f6"}, "message_list": [], "variable_list": [], "uuid": "39279fac-041b-48ec-b9c4-bab015efc3cd"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "79d94beb-6307-4549-81aa-c873bdec4f79", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_profile", "name": "Centos", "uuid": "d82eff07-5b3f-41c8-bda3-69b94136786c"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "1f01c73f-0647-45fd-aaaf-50a5575f6356"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "56618df8-6ff7-44b8-aded-a557f99f39f0"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "bcb9e613-d0a8-44aa-a14b-cfb4d7f72f12"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "34d7a4ef-8ba7-49b7-9d4a-61d8dd0eced5"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "169edca0-563c-4b4b-aa56-325023d534a0"}, {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "0cbe6bc0-532b-45c0-8029-98639ebc574d"}, {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "ca02b08a-56c0-451e-92b8-45fb9d3213cc"}, {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "ac0fa2fb-66be-47b1-971b-12b4dbe24d8b"}], "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "1f01c73f-0647-45fd-aaaf-50a5575f6356"}, "edge_type": "inherent", "type": "", "uuid": "e88b54a3-4f37-4812-a1e1-2238ff515414", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "bcb9e613-d0a8-44aa-a14b-cfb4d7f72f12"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "bcb9e613-d0a8-44aa-a14b-cfb4d7f72f12"}, "edge_type": "inherent", "type": "", "uuid": "5ff49878-fc60-47f3-9c6b-58f5e53f475a", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "0cbe6bc0-532b-45c0-8029-98639ebc574d"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "0cbe6bc0-532b-45c0-8029-98639ebc574d"}, "edge_type": "inherent", "type": "", "uuid": "79f28bbc-3c92-4809-8ecb-d8dbfc7b34c0", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "uuid": "ca02b08a-56c0-451e-92b8-45fb9d3213cc"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "56618df8-6ff7-44b8-aded-a557f99f39f0"}, "edge_type": "inherent", "type": "", "uuid": "4e3c104b-0221-4d36-97db-717ed13f4c43", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "34d7a4ef-8ba7-49b7-9d4a-61d8dd0eced5"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "169edca0-563c-4b4b-aa56-325023d534a0"}, "edge_type": "inherent", "type": "", "uuid": "33076453-a863-4694-9fff-48506835a7b3", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__DE_Soft_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "uuid": "ac0fa2fb-66be-47b1-971b-12b4dbe24d8b"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "34d7a4ef-8ba7-49b7-9d4a-61d8dd0eced5"}, "edge_type": "inherent", "type": "", "uuid": "96b3c09f-5a4b-4b6d-97a6-5639c7b7528d", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "169edca0-563c-4b4b-aa56-325023d534a0"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "bcb9e613-d0a8-44aa-a14b-cfb4d7f72f12"}, "edge_type": "create_action_edge", "type": "", "uuid": "c3c1e32d-2772-46eb-970b-4b0c67a0bf94", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "169edca0-563c-4b4b-aa56-325023d534a0"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "34d7a4ef-8ba7-49b7-9d4a-61d8dd0eced5"}, "edge_type": "create_action_edge", "type": "", "uuid": "0adad055-bbcd-4887-b5a1-1141da244da0", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "0cbe6bc0-532b-45c0-8029-98639ebc574d"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "35db58aa-e985-4ca4-95f1-5e78193c968b"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "0efd0a0c-e330-406a-a24a-049ab7dead38"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "1f01c73f-0647-45fd-aaaf-50a5575f6356"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "deployment_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "539a67d3-aec8-4c12-ae0f-605b6052c026"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "56618df8-6ff7-44b8-aded-a557f99f39f0"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "bcb9e613-d0a8-44aa-a14b-cfb4d7f72f12"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "34d7a4ef-8ba7-49b7-9d4a-61d8dd0eced5"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos", "uuid": "90328692-1ed7-4573-bc70-5ac502552504"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_90328692_1ed7_4573_bc70_5ac502552504", "uuid": "ae408b3c-0d37-4953-81bd-c96b8814aae3"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "169edca0-563c-4b4b-aa56-325023d534a0"}, {"target_any_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos", "uuid": "b61c4df4-ee9d-4f69-8027-f8923c0384c7"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Substrate_b61c4df4_ee9d_4f69_8027_f8923c0384c7", "uuid": "a747edce-4a4f-4e8c-ace5-c7ae86df0940"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "0cbe6bc0-532b-45c0-8029-98639ebc574d"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "7e23eb76_deployment", "uuid": "5ed5c8f3-8863-451e-b684-4c5ed216af13"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Soft_Delete_5ed5c8f3_8863_451e_b684_4c5ed216af13", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "ca02b08a-56c0-451e-92b8-45fb9d3213cc"}, {"target_any_local_reference": {"kind": "app_blueprint_deployment", "name": "0fd632f7_deployment", "uuid": "f404e874-6b82-4dee-af97-1de55820d9b4"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__DE_Soft_Delete_f404e874_6b82_4dee_af97_1de55820d9b4", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_DEPLOYMENT_ELEMENT", "variable_list": [], "uuid": "ac0fa2fb-66be-47b1-971b-12b4dbe24d8b"}], "description": "", "name": "SYS_GEN__Runbook_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Application_d82eff07_5b3f_41c8_bda3_69b94136786c", "uuid": "35db58aa-e985-4ca4-95f1-5e78193c968b"}, "message_list": [], "variable_list": [], "uuid": "9e841e5c-60d6-4ab9-a88c-20817dbe9795"}, "message_list": [], "name": "action_soft_delete"}], "name": "Centos", "state": "ACTIVE", "message_list": [], "dependency_list": [{"getter_resource_kind": "PackageCfg", "setter_resource_attr": "address", "setter_resource_kind": "SubstrateCfg", "setter_resource_name": "K8SM_Centos", "action_name": "action_create", "action_resource_name": "Centos", "getter_resource_name": "K8SCP", "action_resource_kind": "ApplicationCfg"}, {"getter_resource_kind": "PackageCfg", "setter_resource_attr": "address", "setter_resource_kind": "SubstrateCfg", "setter_resource_name": "K8SC_Centos", "action_name": "action_create", "action_resource_name": "Centos", "getter_resource_name": "K8SMP", "action_resource_kind": "ApplicationCfg"}], "variable_list": [{"val_type": "STRING", "description": "", "name": "KUBELET_IMAGE_TAG", "type": "LOCAL", "value": "v1.7.10_coreos.0", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "1be98cfa-7442-435f-a623-e65cfec8ded1"}, {"val_type": "STRING", "description": "", "name": "CLUSTER_SUBNET", "type": "LOCAL", "value": "10.200.0.0/16", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "a7821821-f08c-4307-b528-a348757cee2b"}, {"val_type": "STRING", "description": "", "name": "SERVICE_SUBNET", "type": "LOCAL", "value": "10.32.0.0/24", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "034503a8-f8ae-40bf-8580-c8deebdb5b70"}, {"val_type": "STRING", "description": "", "name": "KUBE_CLUSTER_DNS", "type": "LOCAL", "value": "10.32.0.10", "label": "", "state": "ACTIVE", "attrs": {}, "editables": {"value": true}, "message_list": [], "uuid": "ba61de2f-054b-4bff-8b18-f1afa6cbe446"}, {"val_type": "STRING", "description": "", "name": "PRISM_CLUSTER_IP", "type": "LOCAL", "value": "10.83.0.14", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "43c919dc-d9a7-4083-b28a-5d327cc3c0da"}, {"val_type": "STRING", "description": "", "name": "PRISM_DATA_SERVICE_IP", "type": "LOCAL", "value": "10.83.0.15", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "a2221691-e4d7-4cf9-8922-fde073b7b65a"}, {"val_type": "STRING", "description": "", "name": "PRISM_USERNAME", "type": "LOCAL", "value": "admin", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "bfb8c52e-84ae-4fcd-8b62-b7b6658b60eb"}, {"val_type": "STRING", "description": "", "name": "PRISM_PASSWORD", "type": "SECRET", "value": "", "label": "", "state": "ACTIVE", "attrs": {"is_secret_modified": false, "secret_reference": {"uuid": "149bbf57-128d-4707-a342-b19999bddcc6"}, "type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "cfe440c7-cc99-4e76-ac07-2b8c4b414c23"}, {"val_type": "STRING", "description": "", "name": "CONTAINER_NAME", "type": "LOCAL", "value": "default", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "e604a808-f2ae-4e7b-9048-76147c0ed5ad"}, {"val_type": "STRING", "description": "", "name": "INSTANCE_PUBLIC_KEY", "type": "LOCAL", "value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDECpYfCllea7A+4zp3N87i8NSix46WTFq9ub47Y56d6JaoncYoh1VE+EyAGKyVTbqRgWFJpF8QpocUCWK4uBhiO8+0fJe33157IbS2i3IEXkCg7/bOPxNcXo7vpOqEv0dV/FKufeOtczyeqYC0XzKZVw9oMT9hzxj341BU+cBQz05xUJ729Y5PMTOGFxttQQuH0HACWmrWikfzQ8OKOrfg7lGo32aV1rI4M6NKn1MVgrAYs+ArZyS6TEXL2nttydnwMei1N1XGIUxV8QytkzIRWxsLV1eFuaavLepeRiHggVo2xJEpWo0L+AsLe5PzwwbdSQtAxaEfOMQaozXZJ/vL cris@macpro.local", "label": "", "state": "ACTIVE", "attrs": {"type": ""}, "editables": {"value": true}, "message_list": [], "uuid": "ebece6d7-8192-4f84-a974-405a297c9c6e"}], "uuid": "d82eff07-5b3f-41c8-bda3-69b94136786c"}], "default_credential_local_reference": {"kind": "app_credential", "name": "KUBE", "uuid": "a2ac9727-833b-4f72-9d51-e23023121149"}, "package_definition_list": [{"description": "", "action_list": [{"description": "System action for installing an application", "type": "system", "uuid": "08d84067-65bf-40e2-b70f-95f7662fc113", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PE_Install_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "f5a8d99f-6e7e-4a20-a1be-30fe8c07fb56"}], "name": "SYS_GEN__DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "c5daa3ba-74af-4056-8dbc-155f462b3c79"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PE_Install_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PackageInstallTask", "uuid": "eeeecba0-ad11-4208-98c4-f25ec927d4dd"}], "name": "1941c1cf_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "dc45402e-0cce-4f49-9587-b4984e062982"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PackageInstallTask", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nsudo easy_install netaddr\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{K8SM_Centos.address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_CLUSTER_DNS}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p /opt/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y \nsudo yum install -y wget iscsi-initiator-utils socat\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} controller${count}\" | sudo tee -a /etc/hosts\n  CON+=\"controller${count}=https://${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's/,$//')\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')    \n    \nwget -q \"https://github.com/coreos/etcd/releases/download/v3.2.6/etcd-v3.2.6-linux-amd64.tar.gz\"\nwget -q https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz\nwget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\n# -*- Bootstrapping a H/A etcd cluster.\ntar -xvf etcd-v3.2.6-linux-amd64.tar.gz\nsudo mv etcd-v3.2.6-linux-amd64/etcd* /usr/bin/\nrm -rf etcd-v3.2.6-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https://github.com/coreos\n\n[Service]\nExecStart=/usr/bin/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT},http://127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=/var/lib/etcd \\\\\n  --wal-dir=/var/lib/etcd/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kube-etcd.service\n\ntar -xvf docker-1.12.6.tgz\nsudo cp docker/docker* /usr/bin/\nrm -rf docker*\necho \"[Unit]\nDescription=Docker Application Container Engine\nDocumentation=http://docs.docker.com\n\n[Service]\nExecStart=/usr/bin/docker daemon \\\\\n  --iptables=false \\\\\n  --ip-masq=false \\\\\n  --host=unix:///var/run/docker.sock \\\\\n  --log-level=error \\\\\n  --storage-driver=overlay\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/docker.service\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=true \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --require-kubeconfig \\\\\n  --runtime-request-timeout=10m \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee /etc/fstab\nsudo mount -a\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo chown -R $USER:$USER /opt/kube-ssl && cd /opt/kube-ssl\nwget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q \"https://github.com/projectcalico/calicoctl/releases/download/v1.6.2/calicoctl\"\nwget -q \"https://storage.googleapis.com/kubernetes-helm/helm-v2.6.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.6.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64/helm calicoctl\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\nsudo mv kubectl linux-amd64/helm calicoctl /usr/local/bin/\nrm -rf helm-v2.6.2-linux-amd64.tar.gz linux-amd64\n\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${CONTROLLER_IPS},${MINION_NAMES},${MINION_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"controller${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\ninstance=\"minion${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone\n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=controller${count}.kubeconfig\nkubectl config set-credentials system:node:controller${count} --client-certificate=controller${count}.pem --client-key=controller${count}-key.pem --embed-certs=true --kubeconfig=controller${count}.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=system:node:controller${count} --kubeconfig=controller${count}.kubeconfig\nkubectl config use-context default --kubeconfig=controller${count}.kubeconfig\ncount=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=minion${count}.kubeconfig\nkubectl config set-credentials system:node:minion${count} --client-certificate=minion${count}.pem --client-key=minion${count}-key.pem --embed-certs=true --kubeconfig=minion${count}.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=system:node:minion${count} --kubeconfig=minion${count}.kubeconfig\nkubectl config use-context default --kubeconfig=minion${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{KUBE.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"controller${count}\"\n  scp -o stricthostkeychecking=no ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  instance=\"minion${count}\"\n  scp -o stricthostkeychecking=no ca*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig ${instance}:\ncount=$((count+1))\ndone\n\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "eeeecba0-ad11-4208-98c4-f25ec927d4dd"}], "description": "", "name": "9c8e1cff_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "1941c1cf_dag", "uuid": "dc45402e-0cce-4f49-9587-b4984e062982"}, "message_list": [], "variable_list": [], "uuid": "71c02826-d6d0-4f6e-94cd-187a7dd5470c"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "2574e274_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "ee425bf6-78f7-4460-8ae5-ce47c84bb574"}], "description": "", "name": "926289ee_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "2574e274_dag", "uuid": "ee425bf6-78f7-4460-8ae5-ce47c84bb574"}, "message_list": [], "variable_list": [], "uuid": "2a843a7c-5bca-4711-b148-2be9b37dac0e"}}, "timeout_secs": "", "type": "CUSTOM_PACKAGE_INSTALL", "variable_list": [], "uuid": "f5a8d99f-6e7e-4a20-a1be-30fe8c07fb56"}], "description": "", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "c5daa3ba-74af-4056-8dbc-155f462b3c79"}, "message_list": [], "variable_list": [], "uuid": "91ed74c0-ac3a-4c01-8ca3-442e2b767a1d"}, "message_list": [], "name": "action_install"}, {"description": "System action for creating an application", "type": "system", "uuid": "65562932-05a3-4a44-a036-3672b8cb25ca", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "170df657-1a13-4aef-b9a3-d176ee784de4"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "e8514ab4-7a8b-4b7a-a267-27f148375f04"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "fa150b9a-1468-419b-a0cc-dcfb8fffabec"}], "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "e8514ab4-7a8b-4b7a-a267-27f148375f04"}, "edge_type": "inherent", "type": "", "uuid": "262bda43-69a3-4435-accc-83d285c24e6d", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "fa150b9a-1468-419b-a0cc-dcfb8fffabec"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "170df657-1a13-4aef-b9a3-d176ee784de4"}, "edge_type": "inherent", "type": "", "uuid": "ef61d6d0-0030-4ff8-8afc-b5d1fd7b92af", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "e8514ab4-7a8b-4b7a-a267-27f148375f04"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "b3b47963-6b31-4437-8de3-3a7929783585"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "91ed74c0-ac3a-4c01-8ca3-442e2b767a1d"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "170df657-1a13-4aef-b9a3-d176ee784de4"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "39d74fe7_runbook", "uuid": "40fb0a0b-51cc-4b83-ab68-5a518d6cfe8d"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "e8514ab4-7a8b-4b7a-a267-27f148375f04"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "05c2f01a_runbook", "uuid": "9e006603-1d50-4066-a7a7-5730b21afebc"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "fa150b9a-1468-419b-a0cc-dcfb8fffabec"}], "description": "", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "b3b47963-6b31-4437-8de3-3a7929783585"}, "message_list": [], "variable_list": [], "uuid": "f3ce97f1-ffb5-46f1-ba36-ed41e5634eae"}, "message_list": [], "name": "action_create"}, {"description": "System action for uninstalling an application", "type": "system", "uuid": "fa52322f-5b8d-442e-94af-093b2a71d514", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PE_Uninstall_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "9c4950c7-927e-4931-bfc6-87f485a6c111"}], "name": "SYS_GEN__DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "efa990de-736a-48a1-8455-d694afb2d529"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PE_Uninstall_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PackageInstallTask", "uuid": "eeeecba0-ad11-4208-98c4-f25ec927d4dd"}], "name": "1941c1cf_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "dc45402e-0cce-4f49-9587-b4984e062982"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PackageInstallTask", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nsudo easy_install netaddr\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{K8SM_Centos.address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_CLUSTER_DNS}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p /opt/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y \nsudo yum install -y wget iscsi-initiator-utils socat\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} controller${count}\" | sudo tee -a /etc/hosts\n  CON+=\"controller${count}=https://${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's/,$//')\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')    \n    \nwget -q \"https://github.com/coreos/etcd/releases/download/v3.2.6/etcd-v3.2.6-linux-amd64.tar.gz\"\nwget -q https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz\nwget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\n# -*- Bootstrapping a H/A etcd cluster.\ntar -xvf etcd-v3.2.6-linux-amd64.tar.gz\nsudo mv etcd-v3.2.6-linux-amd64/etcd* /usr/bin/\nrm -rf etcd-v3.2.6-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https://github.com/coreos\n\n[Service]\nExecStart=/usr/bin/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT},http://127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=/var/lib/etcd \\\\\n  --wal-dir=/var/lib/etcd/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kube-etcd.service\n\ntar -xvf docker-1.12.6.tgz\nsudo cp docker/docker* /usr/bin/\nrm -rf docker*\necho \"[Unit]\nDescription=Docker Application Container Engine\nDocumentation=http://docs.docker.com\n\n[Service]\nExecStart=/usr/bin/docker daemon \\\\\n  --iptables=false \\\\\n  --ip-masq=false \\\\\n  --host=unix:///var/run/docker.sock \\\\\n  --log-level=error \\\\\n  --storage-driver=overlay\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/docker.service\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=true \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --require-kubeconfig \\\\\n  --runtime-request-timeout=10m \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee /etc/fstab\nsudo mount -a\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo chown -R $USER:$USER /opt/kube-ssl && cd /opt/kube-ssl\nwget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q \"https://github.com/projectcalico/calicoctl/releases/download/v1.6.2/calicoctl\"\nwget -q \"https://storage.googleapis.com/kubernetes-helm/helm-v2.6.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.6.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64/helm calicoctl\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\nsudo mv kubectl linux-amd64/helm calicoctl /usr/local/bin/\nrm -rf helm-v2.6.2-linux-amd64.tar.gz linux-amd64\n\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${CONTROLLER_IPS},${MINION_NAMES},${MINION_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"controller${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\ninstance=\"minion${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone\n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=controller${count}.kubeconfig\nkubectl config set-credentials system:node:controller${count} --client-certificate=controller${count}.pem --client-key=controller${count}-key.pem --embed-certs=true --kubeconfig=controller${count}.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=system:node:controller${count} --kubeconfig=controller${count}.kubeconfig\nkubectl config use-context default --kubeconfig=controller${count}.kubeconfig\ncount=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=minion${count}.kubeconfig\nkubectl config set-credentials system:node:minion${count} --client-certificate=minion${count}.pem --client-key=minion${count}-key.pem --embed-certs=true --kubeconfig=minion${count}.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=system:node:minion${count} --kubeconfig=minion${count}.kubeconfig\nkubectl config use-context default --kubeconfig=minion${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{KUBE.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"controller${count}\"\n  scp -o stricthostkeychecking=no ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  instance=\"minion${count}\"\n  scp -o stricthostkeychecking=no ca*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig ${instance}:\ncount=$((count+1))\ndone\n\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "eeeecba0-ad11-4208-98c4-f25ec927d4dd"}], "description": "", "name": "9c8e1cff_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "1941c1cf_dag", "uuid": "dc45402e-0cce-4f49-9587-b4984e062982"}, "message_list": [], "variable_list": [], "uuid": "71c02826-d6d0-4f6e-94cd-187a7dd5470c"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "2574e274_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "ee425bf6-78f7-4460-8ae5-ce47c84bb574"}], "description": "", "name": "926289ee_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "2574e274_dag", "uuid": "ee425bf6-78f7-4460-8ae5-ce47c84bb574"}, "message_list": [], "variable_list": [], "uuid": "2a843a7c-5bca-4711-b148-2be9b37dac0e"}}, "timeout_secs": "", "type": "CUSTOM_PACKAGE_UNINSTALL", "variable_list": [], "uuid": "9c4950c7-927e-4931-bfc6-87f485a6c111"}], "description": "", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "efa990de-736a-48a1-8455-d694afb2d529"}, "message_list": [], "variable_list": [], "uuid": "fb1dd5a1-a20e-413c-80e4-662b28c92ff7"}, "message_list": [], "name": "action_uninstall"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "56e81c8c-cca9-4416-819c-5b2b263434b9", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "39fa4ce0-3263-4f7a-81e3-27f50692b9b6"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "10849c30-e828-492f-8b19-18fed0290b5b"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "02e7b465-4136-4250-b1aa-e8b23522ea78"}], "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "39fa4ce0-3263-4f7a-81e3-27f50692b9b6"}, "edge_type": "inherent", "type": "", "uuid": "84a8e322-7b49-45e1-876b-00db91120648", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "10849c30-e828-492f-8b19-18fed0290b5b"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "10849c30-e828-492f-8b19-18fed0290b5b"}, "edge_type": "inherent", "type": "", "uuid": "7d2e52ac-93f4-46fd-b6b9-6bb29d73434f", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "02e7b465-4136-4250-b1aa-e8b23522ea78"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "8e8a2c67-4f43-434d-9e56-dc7cadb6b830"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "49e3a785_runbook", "uuid": "f80dcd36-ad50-47e2-ad7e-0a02d75c0cb6"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "39fa4ce0-3263-4f7a-81e3-27f50692b9b6"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "b00241d6_runbook", "uuid": "3dd9027c-7515-4ae5-929c-9a2ad6dd7a59"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "10849c30-e828-492f-8b19-18fed0290b5b"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "fb1dd5a1-a20e-413c-80e4-662b28c92ff7"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "02e7b465-4136-4250-b1aa-e8b23522ea78"}], "description": "", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "8e8a2c67-4f43-434d-9e56-dc7cadb6b830"}, "message_list": [], "variable_list": [], "uuid": "ae8018b6-07f3-4abd-bcbd-93482332aad1"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "b69ebead-2a54-4c60-9cfd-363419d5c324", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "6362ddd5-43a0-4173-8d2f-8a429dde4362"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "b3f20c43-622a-4e13-bf22-584e8dfdf59e"}], "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "6362ddd5-43a0-4173-8d2f-8a429dde4362"}, "edge_type": "inherent", "type": "", "uuid": "625674d2-b917-48d5-b6e5-ec5dc8f8add0", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "b3f20c43-622a-4e13-bf22-584e8dfdf59e"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "adc1eb1b-e4f1-4b1f-9e4e-4b393e8f8686"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "0efd0a0c-e330-406a-a24a-049ab7dead38"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "6362ddd5-43a0-4173-8d2f-8a429dde4362"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "b3f20c43-622a-4e13-bf22-584e8dfdf59e"}], "description": "", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "adc1eb1b-e4f1-4b1f-9e4e-4b393e8f8686"}, "message_list": [], "variable_list": [], "uuid": "e3f2cfa7-4c62-43af-82f3-e9b9a2d0d32a"}, "message_list": [], "name": "action_soft_delete"}, {"description": "System action for starting an application", "type": "system", "uuid": "b7886012-1615-4e9e-a7e2-43fc66596d80", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "7ea681ab-625f-46b6-bb5a-65dce1f825b4"}], "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "0ce38d1e-1492-4772-826c-e796c09985e6"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "05c2f01a_runbook", "uuid": "9e006603-1d50-4066-a7a7-5730b21afebc"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "7ea681ab-625f-46b6-bb5a-65dce1f825b4"}], "description": "", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "0ce38d1e-1492-4772-826c-e796c09985e6"}, "message_list": [], "variable_list": [], "uuid": "ee33a733-2378-4f09-9cdd-085f2b5de3c3"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "4ced6fea-b7fd-4bd6-9c42-74e70822954e", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "uuid": "02fca13e-3d9e-419c-9315-c3127a5901c3"}], "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "f704b996-fce3-4184-ae17-d3b10c13590b"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_0f0a2cb6_cd7b_46ca_89d4_52583a4811e8", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "49e3a785_runbook", "uuid": "f80dcd36-ad50-47e2-ad7e-0a02d75c0cb6"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "02fca13e-3d9e-419c-9315-c3127a5901c3"}], "description": "", "name": "SYS_GEN__Runbook_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_cc36ccaf_1bbc_41ec_9957_56a342dc02a0", "uuid": "f704b996-fce3-4184-ae17-d3b10c13590b"}, "message_list": [], "variable_list": [], "uuid": "5ab77e79-f506-488b-8461-e1a5601a5f3d"}, "message_list": [], "name": "action_stop"}], "type": "DEB", "service_local_reference_list": [{"kind": "app_service", "name": "Kubernetes_Master", "uuid": "0f0a2cb6-cd7b-46ca-89d4-52583a4811e8"}], "name": "K8SCP", "state": "ACTIVE", "version": "", "editables": {}, "message_list": [], "options": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PackageInstallTask", "uuid": "eeeecba0-ad11-4208-98c4-f25ec927d4dd"}], "name": "1941c1cf_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "dc45402e-0cce-4f49-9587-b4984e062982"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PackageInstallTask", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nsudo easy_install netaddr\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{K8SM_Centos.address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_CLUSTER_DNS}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p /opt/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y \nsudo yum install -y wget iscsi-initiator-utils socat\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} controller${count}\" | sudo tee -a /etc/hosts\n  CON+=\"controller${count}=https://${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's/,$//')\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')    \n    \nwget -q \"https://github.com/coreos/etcd/releases/download/v3.2.6/etcd-v3.2.6-linux-amd64.tar.gz\"\nwget -q https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz\nwget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\n# -*- Bootstrapping a H/A etcd cluster.\ntar -xvf etcd-v3.2.6-linux-amd64.tar.gz\nsudo mv etcd-v3.2.6-linux-amd64/etcd* /usr/bin/\nrm -rf etcd-v3.2.6-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https://github.com/coreos\n\n[Service]\nExecStart=/usr/bin/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT},http://127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=/var/lib/etcd \\\\\n  --wal-dir=/var/lib/etcd/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kube-etcd.service\n\ntar -xvf docker-1.12.6.tgz\nsudo cp docker/docker* /usr/bin/\nrm -rf docker*\necho \"[Unit]\nDescription=Docker Application Container Engine\nDocumentation=http://docs.docker.com\n\n[Service]\nExecStart=/usr/bin/docker daemon \\\\\n  --iptables=false \\\\\n  --ip-masq=false \\\\\n  --host=unix:///var/run/docker.sock \\\\\n  --log-level=error \\\\\n  --storage-driver=overlay\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/docker.service\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=true \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --require-kubeconfig \\\\\n  --runtime-request-timeout=10m \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee /etc/fstab\nsudo mount -a\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo chown -R $USER:$USER /opt/kube-ssl && cd /opt/kube-ssl\nwget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q \"https://github.com/projectcalico/calicoctl/releases/download/v1.6.2/calicoctl\"\nwget -q \"https://storage.googleapis.com/kubernetes-helm/helm-v2.6.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.6.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64/helm calicoctl\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\nsudo mv kubectl linux-amd64/helm calicoctl /usr/local/bin/\nrm -rf helm-v2.6.2-linux-amd64.tar.gz linux-amd64\n\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${CONTROLLER_IPS},${MINION_NAMES},${MINION_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"controller${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\ninstance=\"minion${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone\n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=controller${count}.kubeconfig\nkubectl config set-credentials system:node:controller${count} --client-certificate=controller${count}.pem --client-key=controller${count}-key.pem --embed-certs=true --kubeconfig=controller${count}.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=system:node:controller${count} --kubeconfig=controller${count}.kubeconfig\nkubectl config use-context default --kubeconfig=controller${count}.kubeconfig\ncount=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=minion${count}.kubeconfig\nkubectl config set-credentials system:node:minion${count} --client-certificate=minion${count}.pem --client-key=minion${count}-key.pem --embed-certs=true --kubeconfig=minion${count}.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=system:node:minion${count} --kubeconfig=minion${count}.kubeconfig\nkubectl config use-context default --kubeconfig=minion${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{KUBE.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"controller${count}\"\n  scp -o stricthostkeychecking=no ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  instance=\"minion${count}\"\n  scp -o stricthostkeychecking=no ca*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig ${instance}:\ncount=$((count+1))\ndone\n\n", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "eeeecba0-ad11-4208-98c4-f25ec927d4dd"}], "description": "", "name": "9c8e1cff_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "1941c1cf_dag", "uuid": "dc45402e-0cce-4f49-9587-b4984e062982"}, "message_list": [], "variable_list": [], "uuid": "71c02826-d6d0-4f6e-94cd-187a7dd5470c"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP", "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "2574e274_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "ee425bf6-78f7-4460-8ae5-ce47c84bb574"}], "description": "", "name": "926289ee_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "2574e274_dag", "uuid": "ee425bf6-78f7-4460-8ae5-ce47c84bb574"}, "message_list": [], "variable_list": [], "uuid": "2a843a7c-5bca-4711-b148-2be9b37dac0e"}}, "variable_list": [], "uuid": "cc36ccaf-1bbc-41ec-9957-56a342dc02a0"}, {"description": "", "action_list": [{"description": "System action for installing an application", "type": "system", "uuid": "877a2566-00d3-4805-8ec7-e111014c5657", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PE_Install_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "c6913319-526e-478e-bbc9-7dbd4612d7ed"}], "name": "SYS_GEN__DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "40a8642d-be3c-416e-bc54-00190260b123"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PE_Install_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PackageInstallTask", "uuid": "e25af253-86f4-40aa-9008-80c8665bbfcc"}], "name": "70add069_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "6c5b7b4d-cb67-4eca-84ad-cbcf933405db"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PackageInstallTask", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{K8SC_Centos.address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_CLUSTER_DNS}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y \nsudo yum install -y wget iscsi-initiator-utils socat\n\ncount=0\nfor i in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${i}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\nwget -q \"https://github.com/coreos/etcd/releases/download/v3.2.6/etcd-v3.2.6-linux-amd64.tar.gz\"\nwget -q https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz\nwget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\ntar -xvf docker-1.12.6.tgz\nsudo cp docker/docker* /usr/bin/\nrm -rf docker*\necho \"[Unit]\nDescription=Docker Application Container Engine\nDocumentation=http://docs.docker.com\n\n[Service]\nExecStart=/usr/bin/docker daemon \\\\\n  --iptables=false \\\\\n  --ip-masq=false \\\\\n  --host=unix:///var/run/docker.sock \\\\\n  --log-level=error \\\\\n  --storage-driver=overlay\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/docker.service\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=true \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --require-kubeconfig \\\\\n  --runtime-request-timeout=10m \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\n\nwhile [ ! -f ${NODE_NAME}.kubeconfig ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee /etc/fstab\nsudo mount -a", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "e25af253-86f4-40aa-9008-80c8665bbfcc"}], "description": "", "name": "bcb096c9_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "70add069_dag", "uuid": "6c5b7b4d-cb67-4eca-84ad-cbcf933405db"}, "message_list": [], "variable_list": [], "uuid": "348cb196-5f75-4e75-b36c-493ae8e03d26"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "9f3d46b7_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "c374a10d-1e01-4b02-8d15-0278ff301476"}], "description": "", "name": "6fc961e1_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "9f3d46b7_dag", "uuid": "c374a10d-1e01-4b02-8d15-0278ff301476"}, "message_list": [], "variable_list": [], "uuid": "9d475bea-5e29-49b4-9aa2-89da398caa9e"}}, "timeout_secs": "", "type": "CUSTOM_PACKAGE_INSTALL", "variable_list": [], "uuid": "c6913319-526e-478e-bbc9-7dbd4612d7ed"}], "description": "", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "40a8642d-be3c-416e-bc54-00190260b123"}, "message_list": [], "variable_list": [], "uuid": "60420e23-3e99-4605-8a48-e815451148eb"}, "message_list": [], "name": "action_install"}, {"description": "System action for creating an application", "type": "system", "uuid": "f47f8219-1ab7-4471-b34c-b6997e57cd63", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "fb22b321-be49-4eea-9595-8faf7f358e0a"}, {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "08bab8ce-5b92-4e4e-b06d-d051c24d3a15"}, {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "739de9bc-c2e0-419b-a791-817623e6ab58"}], "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "08bab8ce-5b92-4e4e-b06d-d051c24d3a15"}, "edge_type": "inherent", "type": "", "uuid": "997717be-a6f0-4684-973f-b605bac7066a", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "739de9bc-c2e0-419b-a791-817623e6ab58"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "fb22b321-be49-4eea-9595-8faf7f358e0a"}, "edge_type": "inherent", "type": "", "uuid": "b60b0ab0-790f-43d4-9a0d-1dc61d21c675", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "08bab8ce-5b92-4e4e-b06d-d051c24d3a15"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "5be5b28f-4719-4980-91c1-b3fd39669a10"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__install_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "60420e23-3e99-4605-8a48-e815451148eb"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "fb22b321-be49-4eea-9595-8faf7f358e0a"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__create_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "925ba7c0_runbook", "uuid": "6fc3922e-1f78-49be-bb87-69f62b307a51"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "08bab8ce-5b92-4e4e-b06d-d051c24d3a15"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "af446214_runbook", "uuid": "3271540b-0d85-412b-8bbc-3b76b78d7e05"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "739de9bc-c2e0-419b-a791-817623e6ab58"}], "description": "", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "5be5b28f-4719-4980-91c1-b3fd39669a10"}, "message_list": [], "variable_list": [], "uuid": "4938f1c7-1ce0-4fea-b13b-c231a23eb477"}, "message_list": [], "name": "action_create"}, {"description": "System action for uninstalling an application", "type": "system", "uuid": "0db3c4eb-e19f-4089-811c-3106032d3665", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PE_Uninstall_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "5867708b-f1ef-494e-b2a4-424babe3e4a0"}], "name": "SYS_GEN__DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "c4cc9fe0-9506-4c46-8d2a-78267de20b41"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PE_Uninstall_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PackageInstallTask", "uuid": "e25af253-86f4-40aa-9008-80c8665bbfcc"}], "name": "70add069_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "6c5b7b4d-cb67-4eca-84ad-cbcf933405db"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PackageInstallTask", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{K8SC_Centos.address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_CLUSTER_DNS}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y \nsudo yum install -y wget iscsi-initiator-utils socat\n\ncount=0\nfor i in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${i}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\nwget -q \"https://github.com/coreos/etcd/releases/download/v3.2.6/etcd-v3.2.6-linux-amd64.tar.gz\"\nwget -q https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz\nwget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\ntar -xvf docker-1.12.6.tgz\nsudo cp docker/docker* /usr/bin/\nrm -rf docker*\necho \"[Unit]\nDescription=Docker Application Container Engine\nDocumentation=http://docs.docker.com\n\n[Service]\nExecStart=/usr/bin/docker daemon \\\\\n  --iptables=false \\\\\n  --ip-masq=false \\\\\n  --host=unix:///var/run/docker.sock \\\\\n  --log-level=error \\\\\n  --storage-driver=overlay\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/docker.service\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=true \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --require-kubeconfig \\\\\n  --runtime-request-timeout=10m \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\n\nwhile [ ! -f ${NODE_NAME}.kubeconfig ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee /etc/fstab\nsudo mount -a", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "e25af253-86f4-40aa-9008-80c8665bbfcc"}], "description": "", "name": "bcb096c9_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "70add069_dag", "uuid": "6c5b7b4d-cb67-4eca-84ad-cbcf933405db"}, "message_list": [], "variable_list": [], "uuid": "348cb196-5f75-4e75-b36c-493ae8e03d26"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "9f3d46b7_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "c374a10d-1e01-4b02-8d15-0278ff301476"}], "description": "", "name": "6fc961e1_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "9f3d46b7_dag", "uuid": "c374a10d-1e01-4b02-8d15-0278ff301476"}, "message_list": [], "variable_list": [], "uuid": "9d475bea-5e29-49b4-9aa2-89da398caa9e"}}, "timeout_secs": "", "type": "CUSTOM_PACKAGE_UNINSTALL", "variable_list": [], "uuid": "5867708b-f1ef-494e-b2a4-424babe3e4a0"}], "description": "", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "c4cc9fe0-9506-4c46-8d2a-78267de20b41"}, "message_list": [], "variable_list": [], "uuid": "032a9ce8-ae3d-42da-b08f-e282f8b825d5"}, "message_list": [], "name": "action_uninstall"}, {"description": "System action for deleting an application. Deletes physical machines as well", "type": "system", "uuid": "2835dcc3-f961-488e-ace0-a0e68602802a", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "8c8d9c62-09be-4d6f-803c-1fb8aebcc583"}, {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "254249c8-3acc-4e5d-9a3d-d2724c540e7b"}, {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "7deda362-17d9-4706-9ade-5c341ae5f053"}], "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "8c8d9c62-09be-4d6f-803c-1fb8aebcc583"}, "edge_type": "inherent", "type": "", "uuid": "74bcf260-cb27-4a35-866d-6dc086e07205", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "254249c8-3acc-4e5d-9a3d-d2724c540e7b"}}, {"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "254249c8-3acc-4e5d-9a3d-d2724c540e7b"}, "edge_type": "inherent", "type": "", "uuid": "d434795a-58dc-4ab8-92b6-a34fde6fe33b", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "7deda362-17d9-4706-9ade-5c341ae5f053"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "71bcc05e-e6c9-47c9-8646-ffd0b2b78447"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "bbfee442_runbook", "uuid": "d55140a3-9de7-415c-963d-3794e26814ea"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "8c8d9c62-09be-4d6f-803c-1fb8aebcc583"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "28e74b96_runbook", "uuid": "5b4efcf8-a145-4233-ab6b-8205959cd6ee"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "254249c8-3acc-4e5d-9a3d-d2724c540e7b"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__uninstall_CRb_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "032a9ce8-ae3d-42da-b08f-e282f8b825d5"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "7deda362-17d9-4706-9ade-5c341ae5f053"}], "description": "", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "71bcc05e-e6c9-47c9-8646-ffd0b2b78447"}, "message_list": [], "variable_list": [], "uuid": "11a15085-5667-4e37-a2e6-36847c23ea93"}, "message_list": [], "name": "action_delete"}, {"description": "System action for deleting an application. Does not delete physical machines", "type": "system", "uuid": "b7cc0316-2e64-4c42-bcea-ac764ad2ca57", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "223cb8c2-5725-49a7-af13-82b8f7e7fb6f"}, {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "b4fe269e-7d41-45fd-ae1c-2e2e7f7be94f"}], "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "223cb8c2-5725-49a7-af13-82b8f7e7fb6f"}, "edge_type": "inherent", "type": "", "uuid": "1931bf0c-7219-4a9b-ab8a-5b452f857cfe", "to_task_reference": {"kind": "app_task", "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "b4fe269e-7d41-45fd-ae1c-2e2e7f7be94f"}}], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "065b6357-67d5-4ab2-bcf8-c574eccdc058"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__soft_delete_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "SYS_GEN__Runbook_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "539a67d3-aec8-4c12-ae0f-605b6052c026"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "223cb8c2-5725-49a7-af13-82b8f7e7fb6f"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__Package_Element_Delete_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"type": ""}, "timeout_secs": "", "type": "SOFT_DELETE_ELEMENT", "variable_list": [], "uuid": "b4fe269e-7d41-45fd-ae1c-2e2e7f7be94f"}], "description": "", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "065b6357-67d5-4ab2-bcf8-c574eccdc058"}, "message_list": [], "variable_list": [], "uuid": "7e0f237a-7e7c-4109-bb8a-3be667b09a1c"}, "message_list": [], "name": "action_soft_delete"}, {"description": "System action for starting an application", "type": "system", "uuid": "8891d0f9-0139-4207-ba79-cf4992ff2831", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "bedb3aa5-03b2-4aaa-a9d5-249567062399"}], "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "267232d4-3932-4a4b-8635-7baa7702a35c"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__start_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "af446214_runbook", "uuid": "3271540b-0d85-412b-8bbc-3b76b78d7e05"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "bedb3aa5-03b2-4aaa-a9d5-249567062399"}], "description": "", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "267232d4-3932-4a4b-8635-7baa7702a35c"}, "message_list": [], "variable_list": [], "uuid": "37d2d8d9-96d3-4d56-ad82-c42423548032"}, "message_list": [], "name": "action_start"}, {"description": "System action for stopping an application", "type": "system", "uuid": "cdc86abe-c4c2-404f-a1ea-59fd724a1dac", "state": "ACTIVE", "critical": true, "attrs": {}, "runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "uuid": "98b0ce92-fd02-4687-8c7a-0dbae189e4ff"}], "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "attrs": {"edges": [], "type": "DAG"}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "7d6e825f-2276-4435-bf62-f5dd8fd322b6"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "SYS_GEN__stop_CRb_Service_b604b8d9_4341_4801_9bc0_6321829e7776", "state": "ACTIVE", "attrs": {"type": "CALL_RUNBOOK", "inarg_list": [], "runbook_reference": {"kind": "app_runbook", "name": "bbfee442_runbook", "uuid": "d55140a3-9de7-415c-963d-3794e26814ea"}}, "timeout_secs": "", "type": "CALL_RUNBOOK", "variable_list": [], "uuid": "98b0ce92-fd02-4687-8c7a-0dbae189e4ff"}], "description": "", "name": "SYS_GEN__Runbook_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "SYS_GEN__Composite_DAG_Package_0ffd097a_9dac_4df7_ab0d_56d7dc847fed", "uuid": "7d6e825f-2276-4435-bf62-f5dd8fd322b6"}, "message_list": [], "variable_list": [], "uuid": "b1d6795f-5db6-40ca-a55a-bd9bd5d85def"}, "message_list": [], "name": "action_stop"}], "type": "DEB", "service_local_reference_list": [{"kind": "app_service", "name": "Kubernetes_Minion", "uuid": "b604b8d9-4341-4801-9bc0-6321829e7776"}], "name": "K8SMP", "state": "ACTIVE", "version": "", "editables": {}, "message_list": [], "options": {"install_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PackageInstallTask", "uuid": "e25af253-86f4-40aa-9008-80c8665bbfcc"}], "name": "70add069_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "6c5b7b4d-cb67-4eca-84ad-cbcf933405db"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "PackageInstallTask", "state": "ACTIVE", "attrs": {"script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{K8SC_Centos.address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_CLUSTER_DNS}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y \nsudo yum install -y wget iscsi-initiator-utils socat\n\ncount=0\nfor i in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${i}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\nwget -q \"https://github.com/coreos/etcd/releases/download/v3.2.6/etcd-v3.2.6-linux-amd64.tar.gz\"\nwget -q https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz\nwget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\ntar -xvf docker-1.12.6.tgz\nsudo cp docker/docker* /usr/bin/\nrm -rf docker*\necho \"[Unit]\nDescription=Docker Application Container Engine\nDocumentation=http://docs.docker.com\n\n[Service]\nExecStart=/usr/bin/docker daemon \\\\\n  --iptables=false \\\\\n  --ip-masq=false \\\\\n  --host=unix:///var/run/docker.sock \\\\\n  --log-level=error \\\\\n  --storage-driver=overlay\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/docker.service\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=true \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --require-kubeconfig \\\\\n  --runtime-request-timeout=10m \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\n\nwhile [ ! -f ${NODE_NAME}.kubeconfig ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee /etc/fstab\nsudo mount -a", "type": "", "command_line_args": "", "exit_status": [], "script_type": "sh"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "uuid": "e25af253-86f4-40aa-9008-80c8665bbfcc"}], "description": "", "name": "bcb096c9_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "70add069_dag", "uuid": "6c5b7b4d-cb67-4eca-84ad-cbcf933405db"}, "message_list": [], "variable_list": [], "uuid": "348cb196-5f75-4e75-b36c-493ae8e03d26"}, "type": "", "uninstall_runbook": {"task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP", "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}, "description": "", "message_list": [], "child_tasks_local_reference_list": [], "name": "9f3d46b7_dag", "state": "ACTIVE", "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "uuid": "c374a10d-1e01-4b02-8d15-0278ff301476"}], "description": "", "name": "6fc961e1_runbook", "state": "ACTIVE", "main_task_local_reference": {"kind": "app_task", "name": "9f3d46b7_dag", "uuid": "c374a10d-1e01-4b02-8d15-0278ff301476"}, "message_list": [], "variable_list": [], "uuid": "9d475bea-5e29-49b4-9aa2-89da398caa9e"}}, "variable_list": [], "uuid": "0ffd097a-9dac-4df7-ab0d-56d7dc847fed"}]}, "name": "k8s - sarat v2"}, "spec": {"description": "", "resources": {"service_definition_list": [{"singleton": false, "name": "Kubernetes_Master", "action_list": [{"critical": false, "type": "system", "description": "System action for creating an application", "name": "action_create", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Configure"}], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "7de8078e_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo cp ca*.pem etcd-*.pem kubernetes*.pem ${HOSTNAME}* kube-*.kubeconfig encryption-config.yaml ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo cp etcd-*.pem ${ETCD_CERT_PATH}/\nsudo chmod +r ${ETCD_CERT_PATH}/*\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - apiserver\n    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,AlwaysPullImages\n    - --advertise-address=${INTERNAL_IP}\n    - --allow-privileged=true\n    - --anonymous-auth=true\n    - --insecure-port=0\n    - --secure-port=443\n    - --profiling=false\n    - --repair-malformed-updates=false\n    - --apiserver-count=3\n    - --audit-log-maxage=30\n    - --audit-log-maxbackup=10\n    - --audit-log-maxsize=100\n    - --audit-log-path=/var/lib/audit.log\n    - --authorization-mode=RBAC\n    - --bind-address=0.0.0.0\n    - --event-ttl=1h\n    - --service-account-lookup=true\n    - --enable-swagger-ui=true\n    - --runtime-config=rbac.authorization.k8s.io/v1alpha1\n    - --etcd-cafile=${ETCD_CERT_PATH}/etcd-ca.pem\n    - --etcd-certfile=${ETCD_CERT_PATH}/etcd-client.pem\n    - --etcd-keyfile=${ETCD_CERT_PATH}/etcd-client-key.pem\n    - --etcd-servers=${ETCD_SERVERS}\n    - --experimental-encryption-provider-config=${KUBE_CERT_PATH}/encryption-config.yaml\n    - --tls-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-client-certificate=${KUBE_CERT_PATH}/kubernetes.pem\n    - --kubelet-client-key=${KUBE_CERT_PATH}/kubernetes-key.pem\n    - --kubelet-https=true\n    - --service-account-key-file=${KUBE_CERT_PATH}/kubernetes.pem\n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --service-node-port-range=30000-32767\n    - --client-ca-file=${KUBE_CERT_PATH}/ca.pem\n    - --v=2\n    ports:\n    - containerPort: 443\n      hostPort: 443\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /etc/ssl/certs\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-apiserver.yaml\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --address=0.0.0.0  \n    - --allocate-node-cidrs=true  \n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --cluster-name=kubernetes-prod-cluster  \n    - --leader-elect=true  \n    - --kubeconfig=${KUBE_CERT_PATH}/kube-controller-manager.kubeconfig  \n    - --service-account-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem  \n    - --service-cluster-ip-range=${SERVICE_SUBNET}\n    - --terminated-pod-gc-threshold=100  \n    - --profiling=false  \n    - --use-service-account-credentials=true  \n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-controller-manager.yaml\n    \necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - scheduler\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-scheduler.kubeconfig\n    - --leader-elect=true\n    - --profiling=false\n    - --v=2\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 1\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-scheduler.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "Configure"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "7de8078e_dag"}, "name": "39d74fe7_runbook"}}, {"critical": false, "type": "system", "description": "System action for deleting an application. Deletes physical machines as well", "name": "action_delete", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "04a99dae_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "04a99dae_dag"}, "name": "b00241d6_runbook"}}, {"critical": false, "type": "system", "description": "System action for starting an application", "name": "action_start", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Start"}, {"kind": "app_task", "name": "StartFlanneld"}, {"kind": "app_task", "name": "KubeDns"}, {"kind": "app_task", "name": "VolumePlugin"}, {"kind": "app_task", "name": "Dashboard"}, {"kind": "app_task", "name": "Helm"}, {"kind": "app_task", "name": "Calico"}], "attrs": {"edges": [{"from_task_reference": {"kind": "app_task", "name": "VolumePlugin"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Dashboard"}}, {"from_task_reference": {"kind": "app_task", "name": "Dashboard"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Helm"}}, {"from_task_reference": {"kind": "app_task", "name": "Helm"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "Calico"}}, {"from_task_reference": {"kind": "app_task", "name": "Start"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "StartFlanneld"}}, {"from_task_reference": {"kind": "app_task", "name": "StartFlanneld"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "KubeDns"}}, {"from_task_reference": {"kind": "app_task", "name": "KubeDns"}, "edge_type": "user_defined", "type": "", "to_task_reference": {"kind": "app_task", "name": "VolumePlugin"}}], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "40001146_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\nsudo systemctl start kube-etcd docker kubelet iscsid\nsudo systemctl enable kube-etcd docker kubelet iscsid\nexport PATH=$PATH:/opt/bin\n\nmkdir CA\nmv ca*.pem etcd-*.pem kubernetes*.pem controller* kube-*.kubeconfig encryption-config.yaml CA/\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\ncp /opt/kube-ssl/admin*.pem CA/\nwhile [[ $(curl --key CA/admin-key.pem --cert CA/admin.pem --cacert CA/ca.pem https://@@{address}@@/healthz) != \"ok\" ]] ; do\n    echo \"sleep for 5 secs\"\n\tsleep 5\ndone\n\nkubectl config set-cluster kubernetes-the-hard-way  --certificate-authority=$HOME/CA/ca.pem  --embed-certs=true --server=https://@@{address}@@\nkubectl config set-credentials admin  --client-certificate=$HOME/CA/admin.pem  --client-key=$HOME/CA/admin-key.pem\nkubectl config set-context kubernetes-the-hard-way  --cluster=kubernetes-the-hard-way  --user=admin\nkubectl config use-context kubernetes-the-hard-way"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "Start"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nsleep 10\nexport PATH=$PATH:/opt/bin\necho '---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nrules:\n  - apiGroups:\n      - \"\"\n    resources:\n      - pods\n    verbs:\n      - get\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - \"\"\n    resources:\n      - nodes/status\n    verbs:\n      - patch\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: flannel\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: flannel\nsubjects:\n- kind: ServiceAccount\n  name: flannel\n  namespace: kube-system\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: flannel\n  namespace: kube-system\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: kube-flannel-cfg\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\ndata:\n  cni-conf.json: |\n    {\n      \"name\": \"cbr0\",\n      \"type\": \"flannel\",\n      \"delegate\": {\n        \"isDefaultGateway\": true\n      }\n    }\n  net-conf.json: |\n    {\n      \"Network\": \"10.200.0.0/16\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n---\napiVersion: extensions/v1beta1\nkind: DaemonSet\nmetadata:\n  name: kube-flannel-ds\n  namespace: kube-system\n  labels:\n    tier: node\n    app: flannel\nspec:\n  template:\n    metadata:\n      labels:\n        tier: node\n        app: flannel\n    spec:\n      hostNetwork: true\n      nodeSelector:\n        beta.kubernetes.io/arch: amd64\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        operator: Exists\n        effect: NoSchedule\n      serviceAccountName: flannel\n      initContainers:\n      - name: install-cni\n        image: quay.io/coreos/flannel:v0.9.0-amd64\n        command:\n        - cp\n        args:\n        - -f\n        - /etc/kube-flannel/cni-conf.json\n        - /etc/cni/net.d/10-flannel.conf\n        volumeMounts:\n        - name: cni\n          mountPath: /etc/cni/net.d\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      containers:\n      - name: kube-flannel\n        image: quay.io/coreos/flannel:v0.9.0-amd64\n        command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n        securityContext:\n          privileged: true\n        env:\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        volumeMounts:\n        - name: run\n          mountPath: /run\n        - name: flannel-cfg\n          mountPath: /etc/kube-flannel/\n      volumes:\n        - name: run\n          hostPath:\n            path: /run\n        - name: cni\n          hostPath:\n            path: /etc/cni/net.d\n        - name: flannel-cfg\n          configMap:\n            name: kube-flannel-cfg' | tee kube-flannel.yml\nkubectl create -f kube-flannel.yml\nsleep 30"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "StartFlanneld"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nmkdir kubedns\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  upstreamNameservers: |\n    [\"8.8.8.8\", \"4.2.2.2\"]\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: @@{KUBE_CLUSTER_DNS}@@\n  ports:\n    - name: dns\n      port: 53\n      protocol: UDP\n    - name: dns-tcp\n      port: 53\n      protocol: TCP\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod:\n    spec:\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.4\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=cluster.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.4\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --log-facility=-\n        - --server=/cluster.local./127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.4\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local.,5,A\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local.,5,A\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy:\n      serviceAccountName: kube-dns' | tee kubedns/kube-dns.yaml\n      \nkubectl create -f kubedns/kube-dns.yaml"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "KubeDns"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nmkdir volume_plugin\nNTNX_SECRET=$(echo -n \"@@{PRISM_USERNAME}@@:@@{PRISM_PASSWORD}@@\" | base64)\necho 'apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\n---\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: nutanixabs-provisioner-runner\n  namespace: kube-system\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumes\"]\n    verbs: [\"get\", \"list\", \"watch\", \"create\", \"delete\"]\n  - apiGroups: [\"\"]\n    resources: [\"persistentvolumeclaims\"]\n    verbs: [\"get\", \"list\", \"watch\", \"update\"]\n  - apiGroups: [\"storage.k8s.io\"]\n    resources: [\"storageclasses\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"\"]\n    resources: [\"events\"]\n    verbs: [\"list\", \"watch\", \"create\", \"update\", \"patch\"]\n  - apiGroups: [\"\"]\n    resources: [\"services\"]\n    verbs: [\"get\"]\n  - apiGroups: [\"\"]\n    resources: [\"secrets\"]\n    verbs: [\"get\", \"create\", \"delete\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1beta1\nmetadata:\n  name: run-nutanixabs-provisioner\n  namespace: kube-system\nsubjects:\n  - kind: ServiceAccount\n    name: nutanixabs-provisioner\n    namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: nutanixabs-provisioner-runner\n  apiGroup: rbac.authorization.k8s.io\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: nutanixabs-provisioner\n  namespace: kube-system\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      labels:\n        app: nutanixabs-provisioner\n    spec:\n      serviceAccount: nutanixabs-provisioner\n      hostNetwork: true\n      containers:\n        -\n          image: \"ntnx/nutanixabs-provisioner\"\n          name: nutanixabs-provisioner\n          args: [\"--v=4\"]\n          imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: <SECRET>\ntype: nutanix/abs\n---\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: silver\n  annotations:\n    storageclass.kubernetes.io/is-default-class: \"true\"\n  namespace: kube-system\nprovisioner: nutanix/abs\nparameters:\n     prismEndPoint: @@{PRISM_CLUSTER_IP}@@:9440\n     dataServiceEndPoint: @@{PRISM_DATA_SERVICE_IP}@@:3260\n     user: @@{PRISM_USERNAME}@@\n     password: @@{PRISM_PASSWORD}@@\n     secretName: ntnx-secret\n     storageContainer: @@{CONTAINER_NAME}@@\n     fsType: ext4\n     chapAuthEnabled: \"false\"' | tee volume_plugin/nutanix-provisioner.yaml\n\nsed -i \"s/<SECRET>/${NTNX_SECRET}/\" volume_plugin/nutanix-provisioner.yaml\nkubectl create -f volume_plugin/nutanix-provisioner.yaml\n\necho \"apiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: default\ndata:\n  key: <SECRET>\ntype: nutanix/abs\" | tee -a volume_plugin/ntnx-secret.yaml\nsed -i \"s/<SECRET>/${NTNX_SECRET}/\" volume_plugin/ntnx-secret.yaml\nkubectl create -f volume_plugin/ntnx-secret.yaml"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "VolumePlugin"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nmkdir Dashboard\necho '# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Configuration to deploy release version of the Dashboard UI compatible with\n# Kubernetes 1.7.\n#\n# Example usage: kubectl create -f <this_file>\n\n# ------------------- Dashboard Secret ------------------- #\n\napiVersion: v1\nkind: Secret\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard-certs\n  namespace: kube-system\ntype: Opaque\n\n---\n# ------------------- Dashboard Service Account ------------------- #\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Role & Role Binding ------------------- #\n\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: kubernetes-full-access\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: kubernetes-dashboard\n  namespace: kube-system\n\n---\n# ------------------- Dashboard Deployment ------------------- #\n\nkind: Deployment\napiVersion: extensions/v1beta1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kubernetes-dashboard\n  template:\n    metadata:\n      labels:\n        k8s-app: kubernetes-dashboard\n    spec:\n      initContainers:\n      - name: kubernetes-dashboard-init\n        image: gcr.io/google_containers/kubernetes-dashboard-init-amd64:v1.0.1\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: /certs\n      containers:\n      - name: kubernetes-dashboard\n        image: gcr.io/google_containers/kubernetes-dashboard-amd64:v1.7.1\n        ports:\n        - containerPort: 9090\n          protocol: TCP\n        args:\n          - --tls-key-file=/certs/dashboard.key\n          - --tls-cert-file=/certs/dashboard.crt\n          # Uncomment the following line to manually specify Kubernetes API server Host\n          # If not specified, Dashboard will attempt to auto discover the API server and connect\n          # to it. Uncomment only if the default does not work.\n          # - --apiserver-host=http://my-address:port\n        volumeMounts:\n        - name: kubernetes-dashboard-certs\n          mountPath: /certs\n          readOnly: true\n        livenessProbe:\n          httpGet:\n            scheme: HTTPS\n            path: /\n            port: 8443\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      volumes:\n      - name: kubernetes-dashboard-certs\n        secret:\n          secretName: kubernetes-dashboard-certs\n      serviceAccountName: kubernetes-dashboard\n      # Comment the following tolerations if Dashboard must not be deployed on master\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n\n---\n# ------------------- Dashboard Service ------------------- #\n\nkind: Service\napiVersion: v1\nmetadata:\n  labels:\n    k8s-app: kubernetes-dashboard\n  name: kubernetes-dashboard\n  namespace: kube-system\nspec:\n  type: NodePort\n  ports:\n    - port: 8443\n      nodePort: 30443\n  selector:\n    k8s-app: kubernetes-dashboard' | tee Dashboard/kubernetes-dashboard.yaml\nkubectl create -f Dashboard/kubernetes-dashboard.yaml"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "Dashboard"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\necho \"#helm init --service-account helm\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: helm\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1beta1\nkind: ClusterRoleBinding\nmetadata:\n  name: helm\n  namespace: kube-system\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: helm\n  namespace: kube-system\" | tee helm.yaml\n  \nkubectl create -f helm.yaml\nhelm init --service-account helm"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "Helm"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\nexport PATH=$PATH:/opt/bin\n\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nETCD_SERVER_PORT=2379\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\nkubectl apply -f https://docs.projectcalico.org/v2.6/getting-started/kubernetes/installation/rbac.yaml\n\n#ETCD_KEY=$(python -c 'import base64; import sys; print base64.b64encode(sys.argv[1])' \"$(cat /etc/kubernetes/ssl/kubernetes-key.pem)\")\n#ETCD_CERT=$(python -c 'import base64; import sys; print base64.b64encode(sys.argv[1])' \"$(cat /etc/kubernetes/ssl/kubernetes.pem)\")\n#ETCD_CA=$(python -c 'import base64; import sys; print base64.b64encode(sys.argv[1])' \"$(cat /etc/kubernetes/ssl/ca.pem)\")\n\necho '# Calico Version v2.6.2\n\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: calico-config\n  namespace: kube-system\ndata:\n  etcd_endpoints: \"<ETCD_SERVERS>\"\n  calico_backend: \"none\"\n  cni_network_config: |-\n    {\n        \"name\": \"k8s-pod-network\",\n        \"cniVersion\": \"0.1.0\",\n        \"type\": \"flannel\",\n         \"delegate\": {\n            \"type\": \"calico\",\n            \"etcd_endpoints\": \"__ETCD_ENDPOINTS__\",\n            \"etcd_key_file\": \"__ETCD_KEY_FILE__\",\n            \"etcd_cert_file\": \"__ETCD_CERT_FILE__\",\n            \"etcd_ca_cert_file\": \"__ETCD_CA_CERT_FILE__\",\n            \"log_level\": \"info\",\n            \"mtu\": 1500,\n            \"policy\": {\n               \"type\": \"k8s\",\n               \"k8s_api_root\": \"https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__\",\n               \"k8s_auth_token\": \"__SERVICEACCOUNT_TOKEN__\"\n           },\n           \"kubernetes\": {\n              \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n           }\n        }\n    }\n  etcd_ca: \"/calico-secrets/etcd-ca\"\n  etcd_cert: \"/calico-secrets/etcd-cert\"\n  etcd_key: \"/calico-secrets/etcd-key\"\n\n---\n\napiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: calico-etcd-secrets\n  namespace: kube-system\ndata:\n  etcd-key: \"<ETCD_KEY>\"\n  etcd-cert: \"<ETCD_CERT>\"\n  etcd-ca: \"<ETCD_CA>\"\n---\n\nkind: DaemonSet\napiVersion: extensions/v1beta1\nmetadata:\n  name: calico-node\n  namespace: kube-system\n  labels:\n    k8s-app: calico-node\nspec:\n  selector:\n    matchLabels:\n      k8s-app: calico-node\n  template:\n    metadata:\n      labels:\n        k8s-app: calico-node\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: \"\"\n        scheduler.alpha.kubernetes.io/tolerations: |\n          [{\"key\": \"dedicated\", \"value\": \"master\", \"effect\": \"NoSchedule\" },\n           {\"key\":\"CriticalAddonsOnly\", \"operator\":\"Exists\"}]\n    spec:\n      hostNetwork: true\n      serviceAccountName: calico-node\n\n      terminationGracePeriodSeconds: 0\n      containers:\n\n        - name: calico-node\n          image: quay.io/calico/node:v2.6.2\n          env:\n            - name: ETCD_ENDPOINTS\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_endpoints\n            - name: CALICO_NETWORKING_BACKEND\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: calico_backend\n            - name: CLUSTER_TYPE\n              value: \"k8s\"\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            - name: ETCD_CA_CERT_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_ca\n            - name: ETCD_KEY_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_key\n            - name: ETCD_CERT_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_cert\n            - name: IP\n              value: \"\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: /liveness\n              port: 9099\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: /readiness\n              port: 9099\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: /lib/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: /var/run/calico\n              name: var-run-calico\n              readOnly: false\n            - mountPath: /calico-secrets\n              name: etcd-certs\n        - name: install-cni\n          image: quay.io/calico/cni:v1.11.0\n          command: [\"/install-cni.sh\"]\n          env:\n            - name: ETCD_ENDPOINTS\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_endpoints\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: cni_network_config\n          volumeMounts:\n            - mountPath: /host/opt/cni/bin\n              name: cni-bin-dir\n            - mountPath: /host/etc/cni/net.d\n              name: cni-net-dir\n            - mountPath: /calico-secrets\n              name: etcd-certs\n      volumes:\n        - name: lib-modules\n          hostPath:\n            path: /lib/modules\n        - name: var-run-calico\n          hostPath:\n            path: /var/run/calico\n        - name: cni-bin-dir\n          hostPath:\n            path: /opt/cni/bin\n        - name: cni-net-dir\n          hostPath:\n            path: /etc/cni/net.d\n        - name: etcd-certs\n          secret:\n            secretName: calico-etcd-secrets\n\n---\n\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: calico-kube-controllers\n  namespace: kube-system\n  labels:\n    k8s-app: calico-kube-controllers\n  annotations:\n    scheduler.alpha.kubernetes.io/critical-pod: \"\"\n    scheduler.alpha.kubernetes.io/tolerations: |\n      [{\"key\": \"dedicated\", \"value\": \"master\", \"effect\": \"NoSchedule\" },\n       {\"key\":\"CriticalAddonsOnly\", \"operator\":\"Exists\"}]\nspec:\n  replicas: 1\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      name: calico-kube-controllers\n      namespace: kube-system\n      labels:\n        k8s-app: calico-kube-controllers\n    spec:\n      hostNetwork: true\n      serviceAccountName: calico-kube-controllers\n      containers:\n        - name: calico-kube-controllers\n          image: quay.io/calico/kube-controllers:v1.0.0\n          env:\n            - name: ETCD_ENDPOINTS\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_endpoints\n            - name: ETCD_CA_CERT_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_ca\n            - name: ETCD_KEY_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_key\n            - name: ETCD_CERT_FILE\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_cert\n          volumeMounts:\n            - mountPath: /calico-secrets\n              name: etcd-certs\n      volumes:\n        - name: etcd-certs\n          secret:\n            secretName: calico-etcd-secrets\n\n---\n\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: calico-policy-controller\n  namespace: kube-system\n  labels:\n    k8s-app: calico-policy\nspec:\n  replicas: 0\n  strategy:\n    type: Recreate\n  template:\n    metadata:\n      name: calico-policy-controller\n      namespace: kube-system\n      labels:\n        k8s-app: calico-policy\n    spec:\n      hostNetwork: true\n      serviceAccountName: calico-kube-controllers\n      containers:\n        - name: calico-policy-controller\n          image: quay.io/calico/kube-controllers:v1.0.0\n          env:\n            - name: ETCD_ENDPOINTS\n              valueFrom:\n                configMapKeyRef:\n                  name: calico-config\n                  key: etcd_endpoints\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-kube-controllers\n  namespace: kube-system\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: calico-node\n  namespace: kube-system' | tee calico.yaml\n  \nsed -i \"s#<ETCD_SERVERS>#${ETCD_SERVERS}#\" calico.yaml\nsed -i \"s/<ETCD_KEY>/${ETCD_KEY}/\" calico.yaml\nsed -i \"s/<ETCD_CERT>/${ETCD_CERT}/\" calico.yaml\nsed -i \"s/<ETCD_CA>/${ETCD_CA}/\" calico.yaml\n"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "Calico"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "40001146_dag"}, "name": "05c2f01a_runbook"}}, {"critical": false, "type": "system", "description": "System action for stopping an application", "name": "action_stop", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "68e6d6cf_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "68e6d6cf_dag"}, "name": "49e3a785_runbook"}}, {"critical": false, "type": "system", "description": "System action for restarting an application", "name": "action_restart", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "928d779e_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "928d779e_dag"}, "name": "9bfe1a06_runbook"}}], "description": "", "port_list": [], "tier": "", "variable_list": [], "depends_on_list": []}, {"singleton": false, "name": "Kubernetes_Minion", "action_list": [{"critical": false, "type": "system", "description": "System action for creating an application", "name": "action_create", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "9dfbf446_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "9dfbf446_dag"}, "name": "925ba7c0_runbook"}}, {"critical": false, "type": "system", "description": "System action for deleting an application. Deletes physical machines as well", "name": "action_delete", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "141edbbe_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "141edbbe_dag"}, "name": "28e74b96_runbook"}}, {"critical": false, "type": "system", "description": "System action for starting an application", "name": "action_start", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Start"}], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "c4ac1e52_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nsudo systemctl start kubelet iscsid\nsudo systemctl enable kubelet iscsid"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "Start"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "c4ac1e52_dag"}, "name": "af446214_runbook"}}, {"critical": false, "type": "system", "description": "System action for stopping an application", "name": "action_stop", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "35667c90_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "35667c90_dag"}, "name": "bbfee442_runbook"}}, {"critical": false, "type": "system", "description": "System action for restarting an application", "name": "action_restart", "runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Minion"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "78a2de6b_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "78a2de6b_dag"}, "name": "4db0601a_runbook"}}], "description": "", "port_list": [], "tier": "", "variable_list": [], "depends_on_list": []}], "substrate_definition_list": [{"description": "", "action_list": [], "readiness_probe": {"connection_type": "SSH", "disable_readiness_probe": false, "timeout_secs": "60", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@", "connection_port": 22, "login_credential_local_reference": {"kind": "app_credential", "name": "KUBE"}}, "editables": {"readiness_probe": {"connection_type": true, "connection_port": true, "timeout_secs": true}, "create_spec": {"name": true, "resources": {"nic_list": {"0": {"subnet_reference": true}}, "num_vcpus_per_socket": true, "num_sockets": true, "memory_size_mib": true, "guest_customization": true, "disk_list": {"1": {"disk_size_mib": true}, "0": {"data_source_reference": true, "device_properties": {"device_type": true, "disk_address": {"adapter_type": true}}}, "3": {"disk_size_mib": true}, "2": {"disk_size_mib": true}}}}}, "os_type": "Linux", "type": "AHV_VM", "create_spec": {"backup_policy": null, "type": "", "name": "Centos-K8SC@@{calm_array_index}@@", "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "13e8838f-dadd-4b0a-a65b-10598432ea88"}, "type": ""}], "parent_reference": null, "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "power_state": "ON", "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: kube\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"adapter_type": "SCSI", "device_index": 0, "type": ""}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "image", "type": "", "name": "CENTOS_7_1801", "uuid": "278a212c-5d87-4679-95c0-92175216a73f"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 0, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 1, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 2, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 3, "type": ""}}}]}, "availability_zone_reference": null}, "variable_list": [], "name": "K8SC_Centos"}, {"description": "", "action_list": [], "readiness_probe": {"connection_type": "SSH", "disable_readiness_probe": false, "timeout_secs": "60", "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@", "connection_port": 22, "login_credential_local_reference": {"kind": "app_credential", "name": "KUBE"}}, "editables": {"readiness_probe": {"connection_type": true, "connection_port": true, "timeout_secs": true}, "create_spec": {"name": true, "resources": {"nic_list": {"0": {"subnet_reference": true}}, "num_vcpus_per_socket": true, "num_sockets": true, "memory_size_mib": true, "guest_customization": true, "disk_list": {"1": {"disk_size_mib": true}, "0": {"data_source_reference": true, "device_properties": {"device_type": true, "disk_address": {"adapter_type": true}}}, "3": {"disk_size_mib": true}, "2": {"disk_size_mib": true}}}}}, "os_type": "Linux", "type": "AHV_VM", "create_spec": {"backup_policy": null, "type": "", "name": "Centos-K8SM@@{calm_array_index}@@", "resources": {"nic_list": [{"nic_type": "NORMAL_NIC", "ip_endpoint_list": [], "network_function_chain_reference": null, "network_function_nic_type": "INGRESS", "mac_address": "", "subnet_reference": {"kind": "subnet", "type": "", "name": "", "uuid": "13e8838f-dadd-4b0a-a65b-10598432ea88"}, "type": ""}], "parent_reference": null, "guest_tools": null, "num_vcpus_per_socket": 1, "num_sockets": 2, "gpu_list": [], "memory_size_mib": 2048, "power_state": "ON", "hardware_clock_timezone": "", "guest_customization": {"cloud_init": {"meta_data": "", "type": "", "user_data": "#cloud-config\nusers:\n  - name: kube\n    ssh-authorized-keys:\n      - @@{INSTANCE_PUBLIC_KEY}@@\n    sudo: ['ALL=(ALL) NOPASSWD:ALL']"}, "type": "", "sysprep": null}, "type": "", "boot_config": {"boot_device": {"type": "", "disk_address": {"adapter_type": "SCSI", "device_index": 0, "type": ""}}, "type": "", "mac_address": ""}, "disk_list": [{"data_source_reference": {"kind": "image", "type": "", "name": "CENTOS_7_1801", "uuid": "278a212c-5d87-4679-95c0-92175216a73f"}, "type": "", "disk_size_mib": 0, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 0, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 1, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 2, "type": ""}}}, {"data_source_reference": null, "type": "", "disk_size_mib": 8192, "device_properties": {"type": "", "device_type": "DISK", "disk_address": {"adapter_type": "SCSI", "device_index": 3, "type": ""}}}]}, "availability_zone_reference": null}, "variable_list": [], "name": "K8SM_Centos"}], "credential_definition_list": [{"username": "kube", "description": "", "secret": {"attrs": {"is_secret_modified": false, "secret_reference": {}}}, "editables": {"username": true, "secret": true}, "type": "KEY", "name": "KUBE"}], "package_definition_list": [{"description": "", "action_list": [], "service_local_reference_list": [{"kind": "app_service", "name": "Kubernetes_Master"}], "version": "", "type": "DEB", "options": {"install_runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP"}, "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PackageInstallTask"}], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "1941c1cf_dag"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SCP"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nsudo easy_install netaddr\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{calm_array_address}@@\"\nMINION_IPS=\"@@{K8SM_Centos.address}@@\"\nNODE_NAME=\"controller@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_CLUSTER_DNS}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nETCD_CERT_PATH=\"/etc/ssl/certs/etcd\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\nMASTER_API_HTTPS=443\nETCD_SERVER_PORT=2379\nETCD_CLIENT_PORT=2380\nMASTER_API_PORT=8080\nFIRST_IP_SERVICE_SUBNET=$(python -c \"from netaddr import * ; print IPNetwork('${SERVICE_SUBNET}')[1]\")\n\nsudo mkdir -p /opt/kube-ssl ${KUBE_CERT_PATH} ${KUBE_CNI_BIN_PATH} ${ETCD_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH}\n\nsudo hostnamectl set-hostname --static ${NODE_NAME}\nsudo yum update -y \nsudo yum install -y wget iscsi-initiator-utils socat\n\ncount=0\nfor ip in $(echo \"${CONTROLLER_IPS}\" | tr \",\" \"\\n\"); do\n  echo \"${ip} controller${count}\" | sudo tee -a /etc/hosts\n  CON+=\"controller${count}=https://${ip}:${ETCD_CLIENT_PORT}\",\n  ETCD+=\"https://${ip}:${ETCD_SERVER_PORT}\",\n  CONS_NAMES+=\"controller${count}\",\n  count=$((count+1))\ndone\nETCD_ALL_CONTROLLERS=$(echo $CON | sed  's/,$//')\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\nCONTROLLER_NAMES=$(echo $CONS_NAMES | sed  's/,$//')\n  \ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  echo \"${ip} minion${count}\" | sudo tee -a /etc/hosts\n  MIN_NAMES+=\"minion${count}\",\n  count=$((count+1))\ndone\nMINION_NAMES=$(echo $MIN_NAMES | sed  's/,$//')    \n    \nwget -q \"https://github.com/coreos/etcd/releases/download/v3.2.6/etcd-v3.2.6-linux-amd64.tar.gz\"\nwget -q https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz\nwget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\n# -*- Bootstrapping a H/A etcd cluster.\ntar -xvf etcd-v3.2.6-linux-amd64.tar.gz\nsudo mv etcd-v3.2.6-linux-amd64/etcd* /usr/bin/\nrm -rf etcd-v3.2.6-linux-amd64*\n\necho \"[Unit]\nDescription=etcd\nDocumentation=https://github.com/coreos\n\n[Service]\nExecStart=/usr/bin/etcd \\\\\n  --name ${NODE_NAME} \\\\\n  --cert-file=${ETCD_CERT_PATH}/etcd-server.pem \\\\\n  --key-file=${ETCD_CERT_PATH}/etcd-server-key.pem \\\\\n  --peer-cert-file=${ETCD_CERT_PATH}/etcd-peer.pem \\\\\n  --peer-key-file=${ETCD_CERT_PATH}/etcd-peer-key.pem \\\\\n  --trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-trusted-ca-file=${ETCD_CERT_PATH}/etcd-ca.pem \\\\\n  --peer-client-cert-auth \\\\\n  --client-cert-auth \\\\\n  --initial-advertise-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-peer-urls https://${INTERNAL_IP}:${ETCD_CLIENT_PORT} \\\\\n  --listen-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT},http://127.0.0.1:${ETCD_SERVER_PORT} \\\\\n  --advertise-client-urls https://${INTERNAL_IP}:${ETCD_SERVER_PORT} \\\\\n  --initial-cluster-token etcd-cluster-0 \\\\\n  --initial-cluster ${ETCD_ALL_CONTROLLERS} \\\\\n  --initial-cluster-state new \\\\\n  --data-dir=/var/lib/etcd \\\\\n  --wal-dir=/var/lib/etcd/wal \\\\\n  --max-wals=0\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kube-etcd.service\n\ntar -xvf docker-1.12.6.tgz\nsudo cp docker/docker* /usr/bin/\nrm -rf docker*\necho \"[Unit]\nDescription=Docker Application Container Engine\nDocumentation=http://docs.docker.com\n\n[Service]\nExecStart=/usr/bin/docker daemon \\\\\n  --iptables=false \\\\\n  --ip-masq=false \\\\\n  --host=unix:///var/run/docker.sock \\\\\n  --log-level=error \\\\\n  --storage-driver=overlay\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/docker.service\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=true \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --require-kubeconfig \\\\\n  --runtime-request-timeout=10m \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee /etc/fstab\nsudo mount -a\n\nif [ @@{calm_array_index}@@ -ne 0 ];then\n  exit\nfi\n\nsudo chown -R $USER:$USER /opt/kube-ssl && cd /opt/kube-ssl\nwget -q https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubectl\nwget -q \"https://github.com/projectcalico/calicoctl/releases/download/v1.6.2/calicoctl\"\nwget -q \"https://storage.googleapis.com/kubernetes-helm/helm-v2.6.2-linux-amd64.tar.gz\"\n\ntar -zxvf helm-v2.6.2-linux-amd64.tar.gz\nchmod +x cfssl_linux-amd64 cfssljson_linux-amd64 kubectl linux-amd64/helm calicoctl\nsudo mv cfssl_linux-amd64 /usr/local/bin/cfssl\nsudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\nsudo mv kubectl linux-amd64/helm calicoctl /usr/local/bin/\nrm -rf helm-v2.6.2-linux-amd64.tar.gz linux-amd64\n\necho '{\n  \"signing\": {\n    \"default\": {\n      \"expiry\": \"8760h\"\n    },\n    \"profiles\": {\n      \"server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"signing\", \"key encipherment\", \"server auth\", \"client auth\" ]\n      },\n      \"client\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"client auth\" ]\n      },\n      \"client-server\": {\n        \"expiry\": \"8760h\",\n        \"usages\": [ \"key encipherment\", \"server auth\", \"client auth\" ]\n      }\n    }\n  }\n}' | tee ca-config.json\n\necho '{\n  \"CN\": \"etcd-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-ca-csr.json\n\ncfssl gencert -initca etcd-ca-csr.json | cfssljson -bare etcd-ca\n\necho '{\n  \"CN\": \"etcd\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"etcd\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee etcd-csr.json\n\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=server etcd-csr.json | cfssljson -bare etcd-server\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client-server etcd-csr.json | cfssljson -bare etcd-peer\ncfssl gencert -ca=etcd-ca.pem -ca-key=etcd-ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_IPS} -profile=client etcd-csr.json | cfssljson -bare etcd-client\n\necho '{\n  \"CN\": \"kube-ca\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"CA\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-ca-csr.json\n\ncfssl gencert -initca kube-ca-csr.json | cfssljson -bare ca\n\necho '{\n  \"CN\": \"kubernetes\",\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"kube\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kubernetes-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${CONTROLLER_NAMES},${CONTROLLER_IPS},${MINION_NAMES},${MINION_IPS},${FIRST_IP_SERVICE_SUBNET},127.0.0.1,kubernetes.default,kubernetes,kubernetes.default.svc,kubernetes.default.svc.cluster.local -profile=server kubernetes-csr.json | cfssljson -bare kubernetes\n\necho '{\n  \"CN\": \"system:kube-controller-manager\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-controller-manager\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-controller-manager-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-controller-manager-csr.json | cfssljson -bare kube-controller-manager\n\necho '{\n  \"CN\": \"system:kube-scheduler\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:kube-scheduler\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-scheduler-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=server kube-scheduler-csr.json | cfssljson -bare kube-scheduler\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\ninstance=\"controller${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone \n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\ninstance=\"minion${count}\"\necho \"{\n  \\\"CN\\\": \\\"system:node:${instance}\\\",\n  \\\"key\\\": {\n    \\\"algo\\\": \\\"rsa\\\",\n    \\\"size\\\": 2048\n  },\n  \\\"names\\\": [\n    {\n      \\\"C\\\": \\\"US\\\",\n      \\\"L\\\": \\\"San Jose\\\",\n      \\\"O\\\": \\\"system:nodes\\\",\n      \\\"OU\\\": \\\"Kubernetes The Hard Way\\\",\n      \\\"ST\\\": \\\"California\\\"\n    }\n  ]\n}\" | tee ${instance}-csr.json\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -hostname=${instance},${ip} -profile=client-server ${instance}-csr.json | cfssljson -bare ${instance}\ncount=$((count+1))\ndone\n\n# -*- Creating kube-proxy certificates\necho '{\n  \"CN\": \"system:kube-proxy\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:node-proxier\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee kube-proxy-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client kube-proxy-csr.json | cfssljson -bare kube-proxy\n\necho '{\n  \"CN\": \"admin\",\n  \"hosts\": [],\n  \"key\": {\n    \"algo\": \"rsa\",\n    \"size\": 2048\n  },\n  \"names\": [\n    {\n      \"C\": \"US\",\n      \"L\": \"San Jose\",\n      \"O\": \"system:masters\",\n      \"OU\": \"Cluster\",\n      \"ST\": \"California\"\n    }\n  ]\n}' | tee admin-csr.json\n\ncfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=client admin-csr.json | cfssljson -bare admin\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=controller${count}.kubeconfig\nkubectl config set-credentials system:node:controller${count} --client-certificate=controller${count}.pem --client-key=controller${count}-key.pem --embed-certs=true --kubeconfig=controller${count}.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=system:node:controller${count} --kubeconfig=controller${count}.kubeconfig\nkubectl config use-context default --kubeconfig=controller${count}.kubeconfig\ncount=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=minion${count}.kubeconfig\nkubectl config set-credentials system:node:minion${count} --client-certificate=minion${count}.pem --client-key=minion${count}-key.pem --embed-certs=true --kubeconfig=minion${count}.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=system:node:minion${count} --kubeconfig=minion${count}.kubeconfig\nkubectl config use-context default --kubeconfig=minion${count}.kubeconfig\ncount=$((count+1))\ndone\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-credentials kube-controller-manager --client-certificate=kube-controller-manager.pem --client-key=kube-controller-manager-key.pem --embed-certs=true --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-controller-manager --kubeconfig=kube-controller-manager.kubeconfig\nkubectl config use-context default --kubeconfig=kube-controller-manager.kubeconfig\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-credentials kube-scheduler --client-certificate=kube-scheduler.pem --client-key=kube-scheduler-key.pem --embed-certs=true --kubeconfig=kube-scheduler.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-scheduler --kubeconfig=kube-scheduler.kubeconfig\nkubectl config use-context default --kubeconfig=kube-scheduler.kubeconfig\n\n\nkubectl config set-cluster kubernetes-prod-cluster --certificate-authority=ca.pem --embed-certs=true --server=https://${INTERNAL_IP}:${MASTER_API_HTTPS} --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-credentials kube-proxy --client-certificate=kube-proxy.pem --client-key=kube-proxy-key.pem --embed-certs=true --kubeconfig=kube-proxy.kubeconfig\nkubectl config set-context default --cluster=kubernetes-prod-cluster --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig\nkubectl config use-context default --kubeconfig=kube-proxy.kubeconfig\n\nENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)\necho \"kind: EncryptionConfig\napiVersion: v1\nresources:\n  - resources:\n      - secrets\n    providers:\n      - aescbc:\n          keys:\n            - name: key1\n              secret: ${ENCRYPTION_KEY}\n      - identity: {}\" | tee encryption-config.yaml\n\necho \"@@{KUBE.secret}@@\" | tee ~/.ssh/id_rsa\nchmod 400 ~/.ssh/id_rsa\n\ncount=0\nfor ip in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  instance=\"controller${count}\"\n  scp -o stricthostkeychecking=no ca*.pem etcd*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig encryption-config.yaml ${instance}:\ncount=$((count+1))\ndone\n\ncount=0\nfor ip in $(echo ${MINION_IPS} | tr \",\" \"\\n\"); do\n  instance=\"minion${count}\"\n  scp -o stricthostkeychecking=no ca*.pem kubernetes*.pem ${instance}* kube-proxy.kubeconfig ${instance}:\ncount=$((count+1))\ndone\n\n"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "PackageInstallTask"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "1941c1cf_dag"}, "name": "9c8e1cff_runbook"}, "type": "", "uninstall_runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SCP"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "2574e274_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "2574e274_dag"}, "name": "926289ee_runbook"}}, "variable_list": [], "name": "K8SCP"}, {"description": "", "action_list": [], "service_local_reference_list": [{"kind": "app_service", "name": "Kubernetes_Minion"}], "version": "", "type": "DEB", "options": {"install_runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP"}, "description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "PackageInstallTask"}], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "70add069_dag"}, {"target_any_local_reference": {"kind": "app_package", "name": "K8SMP"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\nset -ex\n\nINTERNAL_IP=\"@@{address}@@\"\nCONTROLLER_IPS=\"@@{K8SC_Centos.address}@@\"\nNODE_NAME=\"minion@@{calm_array_index}@@\"\nCLUSTER_SUBNET=\"@@{CLUSTER_SUBNET}@@\"\nSERVICE_SUBNET=\"@@{SERVICE_SUBNET}@@\"\nKUBE_CLUSTER_DNS=\"@@{KUBE_CLUSTER_DNS}@@\"\nKUBELET_IMAGE_TAG=\"@@{KUBELET_IMAGE_TAG}@@\"\nKUBE_CERT_PATH=\"/etc/kubernetes/ssl\"\nKUBE_MANIFEST_PATH=\"/etc/kubernetes/manifests\"\nKUBE_CNI_BIN_PATH=\"/opt/cni/bin\"\nKUBE_CNI_CONF_PATH=\"/etc/cni/net.d\"\nETCD_SERVER_PORT=2379\nVERSION=$(echo \"${KUBELET_IMAGE_TAG}\" | tr \"_\" \" \" | awk '{print $1}')\n\nsudo mkdir -p ${KUBE_CERT_PATH} ${KUBE_MANIFEST_PATH} ${KUBE_CNI_CONF_PATH} ${KUBE_CNI_BIN_PATH}\nsudo hostnamectl set-hostname --static ${NODE_NAME}\n\nsudo yum update -y \nsudo yum install -y wget iscsi-initiator-utils socat\n\ncount=0\nfor i in $(echo ${CONTROLLER_IPS} | tr \",\" \"\\n\"); do\n  ETCD+=\"https://${i}:${ETCD_SERVER_PORT}\",\n  count=$((count+1))\ndone\nETCD_SERVERS=$(echo $ETCD | sed  's/,$//')\n\nwget -q \"https://github.com/coreos/etcd/releases/download/v3.2.6/etcd-v3.2.6-linux-amd64.tar.gz\"\nwget -q https://get.docker.com/builds/Linux/x86_64/docker-1.12.6.tgz\nwget -q https://github.com/containernetworking/plugins/releases/download/v0.6.0/cni-plugins-amd64-v0.6.0.tgz\nwget -q https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/linux/amd64/kubelet\nchmod +x kubelet\nsudo mv kubelet /usr/bin/kubelet\n\ntar -xvf docker-1.12.6.tgz\nsudo cp docker/docker* /usr/bin/\nrm -rf docker*\necho \"[Unit]\nDescription=Docker Application Container Engine\nDocumentation=http://docs.docker.com\n\n[Service]\nExecStart=/usr/bin/docker daemon \\\\\n  --iptables=false \\\\\n  --ip-masq=false \\\\\n  --host=unix:///var/run/docker.sock \\\\\n  --log-level=error \\\\\n  --storage-driver=overlay\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/docker.service\n\necho '{\n  \"name\": \"cbr0\",\n  \"type\": \"flannel\",\n  \"delegate\": {\n    \"isDefaultGateway\": true\n  }\n}' | sudo tee ${KUBE_CNI_CONF_PATH}/10-flannel.conf\n\nsudo tar -zxvf cni-plugins-amd64-v0.6.0.tgz -C ${KUBE_CNI_BIN_PATH}\nrm -rf cni-plugins-amd64-v0.6.0.tgz\n\necho \"[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nAfter=docker.service\nRequires=docker.service\n\n[Service]\nExecStart=/usr/bin/kubelet \\\\\n  --allow-privileged=true \\\\\n  --anonymous-auth=true \\\\\n  --cluster-dns=${KUBE_CLUSTER_DNS} \\\\\n  --cluster-domain=cluster.local \\\\\n  --container-runtime=docker \\\\\n  --enable-custom-metrics \\\\\n  --kubeconfig=${KUBE_CERT_PATH}/${NODE_NAME}.kubeconfig \\\\\n  --network-plugin=cni \\\\\n  --pod-cidr=${CLUSTER_SUBNET} \\\\\n  --register-node=true \\\\\n  --require-kubeconfig \\\\\n  --runtime-request-timeout=10m \\\\\n  --tls-cert-file=${KUBE_CERT_PATH}/kubernetes.pem \\\\\n  --tls-private-key-file=${KUBE_CERT_PATH}/kubernetes-key.pem \\\\\n  --pod-manifest-path=${KUBE_MANIFEST_PATH} \\\\\n  --read-only-port=0 \\\\\n  --protect-kernel-defaults=false \\\\\n  --make-iptables-util-chains=true \\\\\n  --keep-terminated-pod-volumes=false \\\\\n  --event-qps=0 \\\\\n  --cadvisor-port=0 \\\\\n  --v=2\nRestart=on-failure\nRestartSec=5\n\n[Install]\nWantedBy=multi-user.target\" | sudo tee /etc/systemd/system/kubelet.service\n\necho \"apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:${KUBELET_IMAGE_TAG}\n    command:\n    - /hyperkube\n    - proxy\n    - --cluster-cidr=${CLUSTER_SUBNET}\n    - --masquerade-all=true\n    - --kubeconfig=${KUBE_CERT_PATH}/kube-proxy.kubeconfig\n    - --proxy-mode=iptables\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: ${KUBE_CERT_PATH}\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: ${KUBE_CERT_PATH}\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\" | sudo tee ${KUBE_MANIFEST_PATH}/kube-proxy.yaml\n\necho \"InitiatorName=iqn.1994-05.com.nutanix:k8s-worker\" | sudo tee /etc/iscsi/initiatorname.iscsi\n\nwhile [ ! -f ${NODE_NAME}.kubeconfig ] ; do  echo \"waiting for certs sleeping 5\" && sleep 5; done\n\nsudo cp *.pem *.kubeconfig ${KUBE_CERT_PATH}/\nsudo chmod +r ${KUBE_CERT_PATH}/*\n\nsudo mkdir -p /var/lib/docker\nsudo yum install -y lvm2\nsudo pvcreate /dev/sd{b,c,d}\nsudo vgcreate docker /dev/sd{b,c,d}\nsleep 3\nsudo lvcreate -l 100%VG -n docker_lvm docker\nsudo mkfs.xfs /dev/docker/docker_lvm\n\necho -e \"/dev/docker/docker_lvm \\t /var/lib/docker \\t xfs \\t defaults \\t 0 0\" | sudo tee /etc/fstab\nsudo mount -a"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "PackageInstallTask"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "70add069_dag"}, "name": "bcb096c9_runbook"}, "type": "", "uninstall_runbook": {"variable_list": [], "task_definition_list": [{"target_any_local_reference": {"kind": "app_package", "name": "K8SMP"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "9f3d46b7_dag"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "9f3d46b7_dag"}, "name": "6fc961e1_runbook"}}, "variable_list": [], "name": "K8SMP"}], "app_profile_list": [{"deployment_create_list": [{"name": "7e23eb76_deployment", "action_list": [], "package_local_reference_list": [{"kind": "app_package", "name": "K8SCP"}], "editables": {"min_replicas": true}, "max_replicas": "3", "substrate_local_reference": {"kind": "app_substrate", "name": "K8SC_Centos"}, "min_replicas": "3", "variable_list": [], "description": ""}, {"name": "0fd632f7_deployment", "action_list": [], "package_local_reference_list": [{"kind": "app_package", "name": "K8SMP"}], "editables": {"min_replicas": true}, "max_replicas": "2", "substrate_local_reference": {"kind": "app_substrate", "name": "K8SM_Centos"}, "min_replicas": "2", "variable_list": [], "description": ""}], "variable_list": [{"val_type": "STRING", "description": "", "value": "v1.7.10_coreos.0", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "KUBELET_IMAGE_TAG"}, {"val_type": "STRING", "description": "", "value": "10.200.0.0/16", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "CLUSTER_SUBNET"}, {"val_type": "STRING", "description": "", "value": "10.32.0.0/24", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "SERVICE_SUBNET"}, {"val_type": "STRING", "description": "", "value": "10.32.0.10", "label": "", "editables": {"value": true}, "type": "LOCAL", "name": "KUBE_CLUSTER_DNS"}, {"val_type": "STRING", "description": "", "value": "10.83.0.14", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "PRISM_CLUSTER_IP"}, {"val_type": "STRING", "description": "", "value": "10.83.0.15", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "PRISM_DATA_SERVICE_IP"}, {"val_type": "STRING", "description": "", "value": "admin", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "PRISM_USERNAME"}, {"val_type": "STRING", "description": "", "value": "", "label": "", "attrs": {"is_secret_modified": false, "secret_reference": {}, "type": ""}, "editables": {"value": true}, "type": "SECRET", "name": "PRISM_PASSWORD"}, {"val_type": "STRING", "description": "", "value": "default", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "CONTAINER_NAME"}, {"val_type": "STRING", "description": "", "value": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDECpYfCllea7A+4zp3N87i8NSix46WTFq9ub47Y56d6JaoncYoh1VE+EyAGKyVTbqRgWFJpF8QpocUCWK4uBhiO8+0fJe33157IbS2i3IEXkCg7/bOPxNcXo7vpOqEv0dV/FKufeOtczyeqYC0XzKZVw9oMT9hzxj341BU+cBQz05xUJ729Y5PMTOGFxttQQuH0HACWmrWikfzQ8OKOrfg7lGo32aV1rI4M6NKn1MVgrAYs+ArZyS6TEXL2nttydnwMei1N1XGIUxV8QytkzIRWxsLV1eFuaavLepeRiHggVo2xJEpWo0L+AsLe5PzwwbdSQtAxaEfOMQaozXZJ/vL cris@macpro.local", "label": "", "attrs": {"type": ""}, "editables": {"value": true}, "type": "LOCAL", "name": "INSTANCE_PUBLIC_KEY"}], "description": "", "action_list": [{"critical": false, "type": "user", "description": "", "name": "Test", "runbook": {"variable_list": [], "task_definition_list": [{"description": "", "child_tasks_local_reference_list": [{"kind": "app_task", "name": "Test"}], "attrs": {"edges": [], "type": ""}, "timeout_secs": "", "type": "DAG", "variable_list": [], "name": "fc93ef5a_dag"}, {"target_any_local_reference": {"kind": "app_service", "name": "Kubernetes_Master"}, "description": "", "child_tasks_local_reference_list": [], "attrs": {"script_type": "sh", "type": "", "command_line_args": "", "exit_status": [], "script": "#!/bin/bash\n\nexport PATH=$PATH:/opt/bin\nif [ @@{calm_array_index}@@ -ne 0 ];then\n\texit\nfi\n\nCONTROLLER_IP=\"@@{calm_array_address}@@\"\nWORKER_IP=\"@@{K8SM_Centos.address}@@\"\nMASTER_IP=\"@@{address}@@\"\n\nfunction log_msg() {\n\tlocal logger=$(basename \"$0\")\n\tprintf \"[${logger}] $1\\n\"\n}\n\n\n# SSH to a node ($1), run command ($2)).\nfunction ssh_run_command() {\n\tlocal node=\"$1\"\n\tlocal command=\"$2\"\n\tssh  -oBatchMode=yes -oConnectTimeout=10 -o StrictHostKeyChecking=no \\\n\t\t-o UserKnownHostsFile=/dev/null -q ${node} ${command} 2>&1 | tr -d '\\r\\n'\n}\n\n\nfunction check_ssh_connectivity() {\n\tlog_msg \"  Checking SSH connectivity to each node (from this host)...\"\n\tfor master in $(echo ${CONTROLLER_IP} | sed \"s/,/ /g\"); do\n\t\tlog_msg \"  Checking SSH connectivity to ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"echo connected\")\n\t\tif [[ $ret != \"connected\" ]]; then\n\t\t\tlog_msg \"  [FAILED] Could not ssh to master ${master}\"\n\t\t\tlog_msg \"  Only IPs in ${CONTROLLER_IP} are allowed to SSH to this node\"\n\t\t\texit 1\n\t\tfi\n\tdone\n\n\tfor worker in $(echo ${WORKER_IP} | sed \"s/,/ /g\"); do\n\t\tlog_msg \"  Checking SSH connectivity to ${worker}\"\n\t\tret=$(ssh_run_command \"${worker}\" \"echo connected\")\n\t\tif [[ $ret != \"connected\" ]]; then\n\t\t\tlog_msg \"  [FAILED] Could not ssh to worker ${worker}\"\n\t\t\tlog_msg \"  Only IPs in ${WORKER_IP} are allowed to SSH to this node\"\n\t\t\texit 1\n\t\tfi\n\tdone\n\n}\n\nfunction check_system_services() {\n\n\tlog_msg \"  Checking whether expected system services are running on each node...\"\n\tfor master in $(echo ${CONTROLLER_IP} | sed \"s/,/ /g\"); do\n\t\tlog_msg \"  Checking docker service on ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"sudo systemctl status docker 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected docker service is not running on master $master\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kubelet service on ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"sudo systemctl status kubelet 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected kubelet service is not running on master $master\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kube-etcd service on ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"sudo systemctl status kube-etcd 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected kube-etcd service is not running on master $master\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kube-proxy service on ${master}\"\n\t\tret=$(ssh_run_command \"${master}\" \"sudo docker ps | grep --only-matching \\\"hyperkube proxy\\\" | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"hyperkube proxy\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected hyperkube proxy service is not running on master $master\"\n\t\t\texit 1\n\t\tfi\n\tdone\n\n\tfor worker in $(echo ${WORKER_IP} | sed \"s/,/ /g\"); do\n\t\tlog_msg \"  Checking docker service on ${worker}\"\n\t\tret=$(ssh_run_command \"${worker}\" \"sudo systemctl status docker 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected docker service is not running on worker $worker\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kubelet service on ${worker}\"\n\t\tret=$(ssh_run_command \"${worker}\" \"sudo systemctl status kubelet 2>&1 | grep --only-matching 'Active: active' | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"Active: active\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected kubelet service is not running on worker $worker\"\n\t\t\texit 1\n\t\tfi\n\t\tlog_msg \"  Checking kube-proxy service on ${worker}\"\n\t\tret=$(ssh_run_command \"${worker}\" \"sudo docker ps | grep --only-matching \\\"hyperkube proxy\\\" | tr -d '\\r\\n'\")\n\t\tif [[ $ret != \"hyperkube proxy\" ]]; then\n\t\t\tlog_msg \"  [FAILED] expected hyperkube proxy service is not running on worker $worker\"\n\t\t\texit 1\n\t\tfi\n\n\tdone\n\n}\n\nfunction check_k8s_healthz_through_lb() {\n\tlog_msg \"  Checking status of /healthz endpoint...\"\n\toutput=$(curl --insecure --max-time 30 https://${MASTER_IP}:443/healthz 2>/dev/null)\n\tif [[ $output != \"ok\" ]]; then\n\t\tlog_msg \"  [FAILED] Master node /healthz is not available\"\n\t\texit 1\n\tfi\n\n}\n\nfunction check_get_nodes() {\n\tlog_msg \"  Running 'kubectl get nodes' a number of times through the master...\"\n\texpected_nodes=$(expr $(echo ${CONTROLLER_IP},${WORKER_IP} | tr -cd , | wc -c) + 1)\n\tfor i in {1..20}; do\n\t\tcount=$(kubectl get nodes --no-headers 2>/dev/null | grep \"Ready\" | wc -l)\n\t\tlog_msg \"  Running 'kubectl get nodes' count is ${count} out of ${expected_nodes} expected...\"\n\t\tif [ \"$count\" -lt $expected_nodes ]; then\n\t\t\tlog_msg \"  [FAILED] kubectl get nodes reported less healthy nodes than expected\"\n\t\t\tkubectl get nodes\n\t\t\texit 1\n\t\tfi\n\tdone\n}\n\nfunction check_kube-dns() {\n\tlog_msg \"  Checking status of kube-dns pod...\"\n\toutput=$(kubectl get pods --namespace=kube-system -l k8s-app=kube-dns 2>&1 | grep kube-dns | awk '{print $3}')\n\tlog_msg \"  kube-dns pod status is ${output}\"\n\tif [[ $output != \"Running\" ]]; then\n\t\tlog_msg \"  [FAILED] kube-dns is not running in the cluster\"\n\t\texit 1\n\tfi\n\n\toutput=$(kubectl get pods --namespace=kube-system -l k8s-app=kube-dns 2>&1 | grep kube-dns | awk '{print $2}')\n\tlog_msg \"  expected kube-dns pod is ${output}\"\n\tif [[ $output != \"3/3\" ]]; then\n\t\tlog_msg \"  [FAILED] expected 3/3 kube-dns pods to be running in the cluster\"\n\t\texit 1\n\tfi\n}\n\nfunction check_nginx_deployment() {\n\tlog_msg \"  Checking an app deployment of nginx exposed as a service...\"\n\texpected_nodes=$(expr $(echo ${CONTROLLER_IP},${WORKER_IP} | tr -cd , | wc -c) + 2)\n\tkubectl run nginx --image=\"nginx\" --port=80 --replicas=${expected_nodes} 1>/dev/null\n\tkubectl expose deployment nginx --type NodePort 1>/dev/null\n\n\tnodePort=\"UNSET\"\n\tmax_tries=0\n\tuntil [ $nodePort != \"UNSET\" ] || [ $max_tries -eq 10 ]; do\n\t\tnodePort=$(kubectl get svc nginx --output=jsonpath='{range .spec.ports[0]}{.nodePort}')\n\t\tmax_tries=$((max_tries + 1))\n\tdone\n\n\tif [[ $nodePort == \"UNSET\" ]]; then\n\t\tlog_msg \"  [FAILED] could not retrieve the NodePort of the nginx service\"\n\t\texit 1\n\tfi\n\n\t# Avoid possible hang if port is not ready\n\tsleep 10\n    for i in {1..5}; do\n\t    for worker in $(echo ${CONTROLLER_IP},${WORKER_IP} | sed \"s/,/ /g\"); do\n\t\t    output=$(curl --max-time 30 http://$worker:$nodePort 2>/dev/null)\n            if [[ -z \"$output\" ]]; then\n\t\t\t    log_msg \"   [FAILED] nginx deployment service is not accessible on http://$worker:$nodePort\"\n\t\t\t    exit 1\n            fi\n\t\t    if [[ $output != *\"Welcome to nginx!\"* ]]; then\n\t\t\t    log_msg \"  [FAILED] nginx deployment service is not accessible on http://$worker:$nodePort\"\n\t\t    \texit 1\n\t    \tfi\n    \tdone\n    done\n    kubectl delete deployment nginx 1>/dev/null\n}\n\nfunction print_success() {\n\tcat <<EOF\n\nThe Kubernetes cluster is up and appears to be healthy.\n$(kubectl cluster-info)\nEOF\n}\n\nlog_msg \"Running some basic checks on Kubernetes cluster....\"\ncheck_ssh_connectivity\ncheck_system_services\ncheck_k8s_healthz_through_lb\ncheck_get_nodes\ncheck_kube-dns\ncheck_nginx_deployment\n\nprint_success\n\nexit 0"}, "timeout_secs": "", "type": "EXEC", "variable_list": [], "name": "Test"}], "description": "", "main_task_local_reference": {"kind": "app_task", "name": "fc93ef5a_dag"}, "name": "ed66499a_runbook"}}], "name": "Centos"}], "default_credential_local_reference": {"kind": "app_credential", "name": "KUBE"}, "client_attrs": {"Kubernetes_Master": {"y": 60, "x": 400}, "Kubernetes_Minion": {"y": 380, "x": 580}}}, "name": "k8s - sarat v2"}, "api_version": "3.0", "metadata": {"last_update_time": "1518546392863679", "creation_time": "1518542551914865", "kind": "blueprint", "spec_version": 4, "name": "k8s - sarat v2"}}